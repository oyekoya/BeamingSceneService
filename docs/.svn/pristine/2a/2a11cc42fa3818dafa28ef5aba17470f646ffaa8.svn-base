On the BEAMING SVN, the folder \mbox{[}trunk/Audio/AudioClientServer\mbox{]} folder contains what may be described as a \char`\"{}stable snapshot\char`\"{} of the audio software for BEAMING. This documentation is generated from the classes therein. Apart from this html-\/version, also a Qt Help file is generated, which can be included in QtCreator to work the same way as other Qt Documentation as described on \href{http://doc.qt.nokia.com/qtcreator/creator-help.html#adding-external-documentation.}{\tt http://doc.qt.nokia.com/qtcreator/creator-\/help.html\#adding-\/external-\/documentation.}

The subfolders contain the main classes as well as separate QtCreator projects and matching source code:

Folder overview:
\begin{DoxyItemize}
\item \mbox{[}Classes\mbox{]} contains Qt classes providing basic functionality that are used in all the different programs
\begin{DoxyItemize}
\item This documentation is so far mainly concerned with these classes
\item The use of these classes should be the main focus for anyone integrating use of the audio streaming. This could for instance be for purposes like determining how to move a mouth or for implementing a proxy.
\end{DoxyItemize}
\end{DoxyItemize}


\begin{DoxyItemize}
\item \mbox{[}AudioClientCli\mbox{]} implements a command line audio client using the client types to connect to an audio server and stream audio
\begin{DoxyItemize}
\item mainly tested in linux.
\item Pierre from UB has succesfully used this in windows, compiled with msvc
\end{DoxyItemize}
\end{DoxyItemize}


\begin{DoxyItemize}
\item \mbox{[}AudioServerCli\mbox{]} implements a command line audio server
\begin{DoxyItemize}
\item mainly tested in linux.
\item Pierre from UB has succesfully used this in windows, compiled with msvc
\item If a Scene server is available, public address and port of the server will be shared on this
\end{DoxyItemize}
\end{DoxyItemize}


\begin{DoxyItemize}
\item \mbox{[}SimpleAudioListener\mbox{]} is a very simple implementation of how one may access a specific audio stream from an AudioServer using the \hyperlink{class_rak_cli}{RakCli} class
\begin{DoxyItemize}
\item currently only tested in linux
\item As long as you include the proper headers etc., this should also be possible to use and compile in windows, including in visual studio
\end{DoxyItemize}
\end{DoxyItemize}

Additional folders with examples will be provided once they are ready.

Anyone willing to create Visual Studio solutions that create DLL's to import the classes in XVR are welcome to help with this.

Quick overview of how to integrate the audio streaming:
\begin{DoxyItemize}
\item Compile the dependencies on the BEAMING SVN accourding to their respective guides
\begin{DoxyItemize}
\item RakNet -\/ required for streaming
\item Beaming Scene -\/ required to locate the audio server address and port
\begin{DoxyItemize}
\item Audio server is puplished as an AUDIO client according to the BEAMING Scene Service documentation
\item When accessing the Scene Service, make sure to set the \char`\"{}viewer\char`\"{} parameter of startclient() to 1
\end{DoxyItemize}
\item (Portaudio) -\/ only required if recording or playing audio
\end{DoxyItemize}
\item Take inspiration from the implementations of SimpleAudioListener and AudioClientCli
\item In particular the following classes are relevant for minimum implementation
\begin{DoxyItemize}
\item \hyperlink{class_rak_cli}{RakCli}
\item \hyperlink{class_audio_interface}{AudioInterface}
\end{DoxyItemize}
\item A definition of relevant client types (\hyperlink{rakinfo_8h_a3c17bff6fe46b8320aaff27c1fbac19c}{tClientType}) that can be used to identify to the audio server can be found in \hyperlink{rakinfo_8h}{rakinfo.h}
\end{DoxyItemize}

For questions, please contact the AAU BEAMING Group on \href{mailto:beaming-aalborg@es.aau.dk}{\tt beaming-\/aalborg@es.aau.dk} 