<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Beaming Scene Service: netClient/phpClient.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  <td id="projectlogo"><img alt="Logo" src="BEAMING_LOGO2.jpg"/></td>
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Beaming Scene Service
   &#160;<span id="projectnumber">2.0</span>
   </div>
   <div id="projectbrief">RakNet wrapper for managing data communications between multiple Beaming clients</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('php_client_8cpp.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">netClient/phpClient.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="php_client_8cpp.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00010"></a>00010 <span class="preprocessor">#include &quot;TCPInterface.h&quot;</span>
<a name="l00011"></a>00011 <span class="preprocessor">#include &quot;HTTPConnection.h&quot;</span>
<a name="l00012"></a>00012 <span class="preprocessor">#include &quot;<a class="code" href="_p_h_p_connections_8h.html" title="Contains PHPConnections, a client for communicating with a HTTP list of connected clients...">PHPConnections.h</a>&quot;</span>
<a name="l00013"></a>00013 <span class="preprocessor">#include &quot;RakSleep.h&quot;</span>
<a name="l00014"></a>00014 <span class="preprocessor">#include &quot;RakString.h&quot;</span>
<a name="l00015"></a>00015 <span class="preprocessor">#include &quot;GetTime.h&quot;</span>
<a name="l00016"></a>00016 <span class="preprocessor">#include &quot;DS_Table.h&quot;</span>
<a name="l00017"></a>00017 <span class="preprocessor">#include &lt;cstring&gt;</span>
<a name="l00018"></a>00018 <span class="preprocessor">#include &lt;cstdlib&gt;</span>
<a name="l00019"></a>00019 <span class="preprocessor">#include &lt;cstdio&gt;</span>
<a name="l00020"></a>00020 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00021"></a>00021 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &quot;Kbhit.h&quot;</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &quot;Getche.h&quot;</span>
<a name="l00024"></a>00024 <span class="preprocessor">#include &quot;<a class="code" href="client_8h.html">client.h</a>&quot;</span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &lt;stdlib.h&gt;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;time.h&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#if defined(_WIN32)</span>
<a name="l00028"></a>00028 <span class="preprocessor"></span><span class="preprocessor">#include &lt;windows.h&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#else</span>
<a name="l00030"></a>00030 <span class="preprocessor"></span><span class="preprocessor">#include&lt;unistd.h&gt;</span>
<a name="l00031"></a>00031 <span class="comment">//#include&lt;cstdlib&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#endif</span>
<a name="l00033"></a>00033 <span class="preprocessor"></span><span class="preprocessor">#include &quot;TCPInterface.h&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;HTTPConnection.h&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="_p_h_p_connections_8h.html" title="Contains PHPConnections, a client for communicating with a HTTP list of connected clients...">PHPConnections.h</a>&quot;</span>
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="comment">// Allocate rather than create on the stack or the RakString mutex crashes on shutdown</span>
<a name="l00038"></a><a class="code" href="php_client_8cpp.html#a9b7b8b2a2e29b2fc99c57d80741bd649">00038</a> TCPInterface *<a class="code" href="php_client_8cpp.html#a9b7b8b2a2e29b2fc99c57d80741bd649">tcp</a>;
<a name="l00039"></a><a class="code" href="php_client_8cpp.html#a4acffdf958524fce3fc4f9feed216480">00039</a> HTTPConnection *<a class="code" href="php_client_8cpp.html#a4acffdf958524fce3fc4f9feed216480">httpConnection</a>;
<a name="l00040"></a><a class="code" href="php_client_8cpp.html#a618ef57d53438f7305f5b4c83b166c15">00040</a> <a class="code" href="class_p_h_p_connections.html" title="Use PHPConnections as a C++ client to Connections.php.">PHPConnections</a> *<a class="code" href="php_client_8cpp.html#a618ef57d53438f7305f5b4c83b166c15">phpConnections</a>;
<a name="l00041"></a>00041 
<a name="l00042"></a><a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260">00042</a> <span class="keyword">enum</span> <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260">ReadResultEnum</a>
<a name="l00043"></a>00043 {
<a name="l00044"></a><a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a71647edbfa9f3144a2db8c84ff7407b3">00044</a>         <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a71647edbfa9f3144a2db8c84ff7407b3">RR_EMPTY_TABLE</a>,
<a name="l00045"></a><a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a718985db19964fa3e70140a9f14ef182">00045</a>         <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a718985db19964fa3e70140a9f14ef182">RR_READ_TABLE</a>,
<a name="l00046"></a><a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a1e59d727e020886d71f886c8c848cd67">00046</a>         <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a1e59d727e020886d71f886c8c848cd67">RR_TIMEOUT</a>,
<a name="l00047"></a>00047 };
<a name="l00048"></a>00048 
<a name="l00049"></a><a class="code" href="php_client_8cpp.html#aadf883618f65cad7edefa543ec584315">00049</a> <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260">ReadResultEnum</a> <a class="code" href="php_client_8cpp.html#aadf883618f65cad7edefa543ec584315">ReadResult</a>(RakNet::RakString &amp;httpResult)
<a name="l00050"></a>00050 {
<a name="l00051"></a>00051         RakNetTimeMS <a class="code" href="_first_character_8s3d.html#acc228c3fa91b2da74f32b714dad36594">endTime</a>=RakNet::GetTimeMS()+10000;
<a name="l00052"></a>00052         httpResult.Clear();
<a name="l00053"></a>00053         <span class="keywordflow">while</span> (RakNet::GetTimeMS()&lt;endTime)
<a name="l00054"></a>00054         {
<a name="l00055"></a>00055                 Packet *<a class="code" href="client_8cpp.html#a5fab032fae4f2b00b3edac2656900211">packet</a> = <a class="code" href="php_client_8cpp.html#a9b7b8b2a2e29b2fc99c57d80741bd649">tcp</a>-&gt;Receive();
<a name="l00056"></a>00056                 <span class="keywordflow">if</span>(packet)
<a name="l00057"></a>00057                 {
<a name="l00058"></a>00058                         <a class="code" href="php_client_8cpp.html#a4acffdf958524fce3fc4f9feed216480">httpConnection</a>-&gt;ProcessTCPPacket(packet);
<a name="l00059"></a>00059                         <a class="code" href="php_client_8cpp.html#a9b7b8b2a2e29b2fc99c57d80741bd649">tcp</a>-&gt;DeallocatePacket(packet);
<a name="l00060"></a>00060                 }
<a name="l00061"></a>00061 
<a name="l00062"></a>00062                 <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a4acffdf958524fce3fc4f9feed216480">httpConnection</a>-&gt;HasRead())
<a name="l00063"></a>00063                 {
<a name="l00064"></a>00064                         httpResult = <a class="code" href="php_client_8cpp.html#a4acffdf958524fce3fc4f9feed216480">httpConnection</a>-&gt;Read();
<a name="l00065"></a>00065                         <span class="comment">// Good response, let the PHPConnections class handle the data</span>
<a name="l00066"></a>00066                         <span class="comment">// If resultCode is not an empty string, then we got something other than a table</span>
<a name="l00067"></a>00067                         <span class="comment">// (such as delete row success notification, or the message is for HTTP only and not for this class).</span>
<a name="l00068"></a>00068                         <a class="code" href="_p_h_p_connections_8h.html#a04cf74531493c3dacc73cd0acbcb714a">HTTPReadResult</a> readResult = phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a9805c800c0f90287d80a3dabba97a99f">ProcessHTTPRead</a>(httpResult);
<a name="l00069"></a>00069 
<a name="l00070"></a>00070                         <span class="keywordflow">if</span> (readResult==<a class="code" href="_p_h_p_connections_8h.html#a04cf74531493c3dacc73cd0acbcb714aaacb8ce72043d6a9a40a8b2caeedeadba">HTTP_RESULT_GOT_TABLE</a>)
<a name="l00071"></a>00071                         {
<a name="l00072"></a>00072                                 <span class="comment">//printf(&quot;RR_READ_TABLE\n&quot;);</span>
<a name="l00073"></a>00073                                 <span class="keywordflow">return</span> <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a718985db19964fa3e70140a9f14ef182">RR_READ_TABLE</a>;
<a name="l00074"></a>00074                         }
<a name="l00075"></a>00075                         <span class="keywordflow">else</span> <span class="keywordflow">if</span> (readResult==<a class="code" href="_p_h_p_connections_8h.html#a04cf74531493c3dacc73cd0acbcb714aa2701d2048027da8946074bd803f3dda9">HTTP_RESULT_EMPTY</a>)
<a name="l00076"></a>00076                         {
<a name="l00077"></a>00077                                 <span class="comment">//printf(&quot;HTTP_RESULT_EMPTY\n&quot;);</span>
<a name="l00078"></a>00078                                 <span class="keywordflow">return</span> <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a71647edbfa9f3144a2db8c84ff7407b3">RR_EMPTY_TABLE</a>;
<a name="l00079"></a>00079                         }
<a name="l00080"></a>00080                 }
<a name="l00081"></a>00081 
<a name="l00082"></a>00082                 <span class="comment">// Update our two classes so they can do time-based updates</span>
<a name="l00083"></a>00083                 <a class="code" href="php_client_8cpp.html#a4acffdf958524fce3fc4f9feed216480">httpConnection</a>-&gt;Update();
<a name="l00084"></a>00084                 phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a75ce699ec49809ba1e77cc3299b735ed" title="Call this periodically - it will handle connection states and refreshing updates to the server...">Update</a>();
<a name="l00085"></a>00085 
<a name="l00086"></a>00086                 <span class="comment">// Prevent 100% cpu usage</span>
<a name="l00087"></a>00087                 RakSleep(1);
<a name="l00088"></a>00088         }
<a name="l00089"></a>00089 
<a name="l00090"></a>00090         <span class="keywordflow">return</span> <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a1e59d727e020886d71f886c8c848cd67">RR_TIMEOUT</a>;
<a name="l00091"></a>00091 }
<a name="l00092"></a>00092 
<a name="l00093"></a><a class="code" href="php_client_8cpp.html#a86460664cc9eb253a861482546f477fb">00093</a> <span class="keywordtype">bool</span> <a class="code" href="php_client_8cpp.html#a86460664cc9eb253a861482546f477fb">HaltOnUnexpectedResult</a>(<a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260">ReadResultEnum</a> result, <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260">ReadResultEnum</a> expected)
<a name="l00094"></a>00094 {
<a name="l00095"></a>00095         <span class="keywordflow">if</span> (result!=expected)
<a name="l00096"></a>00096         {
<a name="l00097"></a>00097                 printf(<span class="stringliteral">&quot;TEST FAILED. Expected &quot;</span>);
<a name="l00098"></a>00098 
<a name="l00099"></a>00099                 <span class="keywordflow">switch</span> (expected)
<a name="l00100"></a>00100                 {
<a name="l00101"></a>00101 
<a name="l00102"></a>00102                 <span class="keywordflow">case</span> <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a71647edbfa9f3144a2db8c84ff7407b3">RR_EMPTY_TABLE</a>:
<a name="l00103"></a>00103                         printf(<span class="stringliteral">&quot;no results&quot;</span>);
<a name="l00104"></a>00104                         <span class="keywordflow">break</span>;
<a name="l00105"></a>00105                 <span class="keywordflow">case</span> <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a1e59d727e020886d71f886c8c848cd67">RR_TIMEOUT</a>:
<a name="l00106"></a>00106                         printf(<span class="stringliteral">&quot;timeout&quot;</span>);
<a name="l00107"></a>00107                         <span class="keywordflow">break</span>;
<a name="l00108"></a>00108                 <span class="keywordflow">case</span> <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a718985db19964fa3e70140a9f14ef182">RR_READ_TABLE</a>:
<a name="l00109"></a>00109                         printf(<span class="stringliteral">&quot;to download result&quot;</span>);
<a name="l00110"></a>00110                         <span class="keywordflow">break</span>;
<a name="l00111"></a>00111                 }
<a name="l00112"></a>00112                 
<a name="l00113"></a>00113                 <span class="keywordflow">switch</span> (result)
<a name="l00114"></a>00114                 {
<a name="l00115"></a>00115                 <span class="keywordflow">case</span> <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a71647edbfa9f3144a2db8c84ff7407b3">RR_EMPTY_TABLE</a>:
<a name="l00116"></a>00116                         printf(<span class="stringliteral">&quot;. No results were downloaded&quot;</span>);
<a name="l00117"></a>00117                         <span class="keywordflow">break</span>;
<a name="l00118"></a>00118                 <span class="keywordflow">case</span> <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a718985db19964fa3e70140a9f14ef182">RR_READ_TABLE</a>:
<a name="l00119"></a>00119                         printf(<span class="stringliteral">&quot;. Got a result&quot;</span>);
<a name="l00120"></a>00120                         <span class="keywordflow">break</span>;
<a name="l00121"></a>00121                 <span class="keywordflow">case</span> <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a1e59d727e020886d71f886c8c848cd67">RR_TIMEOUT</a>:
<a name="l00122"></a>00122                         printf(<span class="stringliteral">&quot;. Timeout&quot;</span>);
<a name="l00123"></a>00123                         <span class="keywordflow">break</span>;
<a name="l00124"></a>00124                 }
<a name="l00125"></a>00125                 printf(<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00126"></a>00126                 <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00127"></a>00127         }
<a name="l00128"></a>00128 
<a name="l00129"></a>00129         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00130"></a>00130 }
<a name="l00131"></a>00131 
<a name="l00132"></a><a class="code" href="php_client_8cpp.html#af9e398a913e71314bad0c13c7bb54226">00132</a> <span class="keywordtype">void</span> <a class="code" href="php_client_8cpp.html#af9e398a913e71314bad0c13c7bb54226">DownloadTable</a>()
<a name="l00133"></a>00133 {
<a name="l00134"></a>00134         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#aa2370d0c50caeaddcafd9750b8d925e8">DownloadTable</a>(<span class="stringliteral">&quot;beammedown&quot;</span>);
<a name="l00135"></a>00135 }
<a name="l00136"></a><a class="code" href="php_client_8cpp.html#aef0cc57c841726dfb4664ae5e16f8c8f">00136</a> <span class="keywordtype">void</span> <a class="code" href="php_client_8cpp.html#aef0cc57c841726dfb4664ae5e16f8c8f">UploadTable</a>(RakNet::RakString clientName, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> clientPort)
<a name="l00137"></a>00137 {
<a name="l00138"></a>00138         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a0ef3622bfec30ffc3c46d52cc9dcfe29">UploadTable</a>(<span class="stringliteral">&quot;beammeup&quot;</span>, clientName, clientPort, <span class="keyword">false</span>);
<a name="l00139"></a>00139 }
<a name="l00140"></a><a class="code" href="php_client_8cpp.html#ab3fc27c327f9418ed65a3f77cabf9e08">00140</a> <span class="keywordtype">void</span> <a class="code" href="php_client_8cpp.html#ab3fc27c327f9418ed65a3f77cabf9e08">UploadAndDownloadTable</a>(RakNet::RakString clientName, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> clientPort)
<a name="l00141"></a>00141 {
<a name="l00142"></a>00142         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#af2022ae14757546de09fa5e077c386ec">UploadAndDownloadTable</a>(<span class="stringliteral">&quot;beammeup&quot;</span>, <span class="stringliteral">&quot;beammedown&quot;</span>, clientName, clientPort, <span class="keyword">false</span>);
<a name="l00143"></a>00143 }
<a name="l00144"></a><a class="code" href="php_client_8cpp.html#a3570941b3bd6c1ac54b8b3192165b166">00144</a> <span class="keywordtype">bool</span> <a class="code" href="php_client_8cpp.html#a3570941b3bd6c1ac54b8b3192165b166">PassTestOnEmptyDownloadedTable</a>()
<a name="l00145"></a>00145 {
<a name="l00146"></a>00146         <span class="keyword">const</span> DataStructures::Table *clients = phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#aae2fff2ce215f29ed1e175362e341247">GetLastDownloadedTable</a>();
<a name="l00147"></a>00147 
<a name="l00148"></a>00148         <span class="keywordflow">if</span> (clients-&gt;GetRowCount()==0)
<a name="l00149"></a>00149         {
<a name="l00150"></a>00150                 printf(<span class="stringliteral">&quot;Test passed.\n&quot;</span>);
<a name="l00151"></a>00151                 <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00152"></a>00152         }
<a name="l00153"></a>00153         printf(<span class="stringliteral">&quot;TEST FAILED. Empty table should have been downloaded.\n&quot;</span>);
<a name="l00154"></a>00154         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00155"></a>00155 }
<a name="l00156"></a><a class="code" href="php_client_8cpp.html#a874d6cadbebbf29c5b1925a928008e26">00156</a> <span class="keywordtype">bool</span> <a class="code" href="php_client_8cpp.html#a874d6cadbebbf29c5b1925a928008e26">VerifyDownloadMatchesUpload</a>(<span class="keywordtype">int</span> requiredRowCount, <span class="keywordtype">int</span> testRowIndex)
<a name="l00157"></a>00157 {
<a name="l00158"></a>00158         <span class="keyword">const</span> DataStructures::Table *clients = phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#aae2fff2ce215f29ed1e175362e341247">GetLastDownloadedTable</a>();
<a name="l00159"></a>00159         <span class="keywordflow">if</span> (clients-&gt;GetRowCount()!=(<span class="keywordtype">unsigned</span> int)requiredRowCount)
<a name="l00160"></a>00160         {
<a name="l00161"></a>00161                 printf(<span class="stringliteral">&quot;TEST FAILED. Expected %i result rows, got %i\n&quot;</span>, requiredRowCount, clients-&gt;GetRowCount());
<a name="l00162"></a>00162                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00163"></a>00163         }
<a name="l00164"></a>00164         RakNet::RakString columnName;
<a name="l00165"></a>00165         RakNet::RakString value;
<a name="l00166"></a>00166         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i;
<a name="l00167"></a>00167         DataStructures::Table::Row *row = clients-&gt;GetRowByIndex(testRowIndex,NULL);
<a name="l00168"></a>00168         <span class="keyword">const</span> DataStructures::List&lt;DataStructures::Table::ColumnDescriptor&gt;&amp; columns = clients-&gt;GetColumns();
<a name="l00169"></a>00169         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> colIndex;
<a name="l00170"></a>00170         <span class="comment">// +4 comes from automatic fields</span>
<a name="l00171"></a>00171         <span class="comment">// _CLIENT_PORT</span>
<a name="l00172"></a>00172         <span class="comment">// _CLIENT_NAME</span>
<a name="l00173"></a>00173         <span class="comment">// _SYSTEM_ADDRESS</span>
<a name="l00174"></a>00174         <span class="comment">// __SEC_AFTER_EPOCH_SINCE_LAST_UPDATE</span>
<a name="l00175"></a>00175         <span class="keywordflow">if</span> (phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#af51cc5bbd5b54a955ddbac13bd2b6609" title="Returns the number of fields set with SetField()">GetFieldCount</a>()+4!=clients-&gt;GetColumnCount())
<a name="l00176"></a>00176         {
<a name="l00177"></a>00177                 printf(<span class="stringliteral">&quot;TEST FAILED. Expected %i columns, got %i\n&quot;</span>, phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#af51cc5bbd5b54a955ddbac13bd2b6609" title="Returns the number of fields set with SetField()">GetFieldCount</a>()+4, clients-&gt;GetColumnCount());
<a name="l00178"></a>00178                 printf(<span class="stringliteral">&quot;Expected columns:\n&quot;</span>);
<a name="l00179"></a>00179                 <span class="keywordflow">for</span> (colIndex=0; colIndex &lt; phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#af51cc5bbd5b54a955ddbac13bd2b6609" title="Returns the number of fields set with SetField()">GetFieldCount</a>(); colIndex++)
<a name="l00180"></a>00180                 {
<a name="l00181"></a>00181                         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a3cfe77b74364ef6b7a33111b3d6f47fa">GetField</a>(colIndex, columnName, value);
<a name="l00182"></a>00182                         printf(<span class="stringliteral">&quot;%i. %s\n&quot;</span>, colIndex+1, columnName.C_String());
<a name="l00183"></a>00183                 }
<a name="l00184"></a>00184                 printf(<span class="stringliteral">&quot;%i. _CLIENT_PORT\n&quot;</span>, colIndex++);
<a name="l00185"></a>00185                 printf(<span class="stringliteral">&quot;%i. _CLIENT_NAME\n&quot;</span>, colIndex++);
<a name="l00186"></a>00186                 printf(<span class="stringliteral">&quot;%i. _System_Address\n&quot;</span>, colIndex++);
<a name="l00187"></a>00187                 printf(<span class="stringliteral">&quot;%i. __SEC_AFTER_EPOCH_SINCE_LAST_UPDATE\n&quot;</span>, colIndex++);
<a name="l00188"></a>00188 
<a name="l00189"></a>00189                 printf(<span class="stringliteral">&quot;Got columns:\n&quot;</span>);
<a name="l00190"></a>00190                 <span class="keywordflow">for</span> (colIndex=0; colIndex &lt; columns.Size(); colIndex++)
<a name="l00191"></a>00191                 {
<a name="l00192"></a>00192                         printf(<span class="stringliteral">&quot;%i. %s\n&quot;</span>, colIndex+1, columns[colIndex].columnName);
<a name="l00193"></a>00193                 }
<a name="l00194"></a>00194 
<a name="l00195"></a>00195                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00196"></a>00196         }
<a name="l00197"></a>00197         <span class="keywordflow">for</span> (i=0; i &lt; phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#af51cc5bbd5b54a955ddbac13bd2b6609" title="Returns the number of fields set with SetField()">GetFieldCount</a>(); i++)
<a name="l00198"></a>00198         {
<a name="l00199"></a>00199                 phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a3cfe77b74364ef6b7a33111b3d6f47fa">GetField</a>(i, columnName, value);
<a name="l00200"></a>00200                 <span class="keywordflow">for</span> (colIndex=0; colIndex &lt; columns.Size(); colIndex++)
<a name="l00201"></a>00201                 {
<a name="l00202"></a>00202                         <span class="keywordflow">if</span> (strcmp(columnName.C_String(), columns[colIndex].columnName)==0)
<a name="l00203"></a>00203                                 <span class="keywordflow">break</span>;
<a name="l00204"></a>00204                 }
<a name="l00205"></a>00205                 <span class="keywordflow">if</span> (colIndex==columns.Size())
<a name="l00206"></a>00206                 {
<a name="l00207"></a>00207                         printf(<span class="stringliteral">&quot;TEST FAILED. Expected column with name %s\n&quot;</span>, columnName.C_String());
<a name="l00208"></a>00208                         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00209"></a>00209                 }
<a name="l00210"></a>00210 
<a name="l00211"></a>00211                 <span class="keywordflow">if</span> (strcmp(value.C_String(), row-&gt;cells[colIndex]-&gt;c)!=0)
<a name="l00212"></a>00212                 {
<a name="l00213"></a>00213                         printf(<span class="stringliteral">&quot;TEST FAILED. Expected row with value &#39;%s&#39; at index %i for column %s. Got &#39;%s&#39;.\n&quot;</span>, value.C_String(), i, columnName.C_String(), row-&gt;cells[colIndex]-&gt;c);
<a name="l00214"></a>00214                         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00215"></a>00215                 }
<a name="l00216"></a>00216         }
<a name="l00217"></a>00217 
<a name="l00218"></a>00218         printf(<span class="stringliteral">&quot;Test passed.\n&quot;</span>);
<a name="l00219"></a>00219         <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00220"></a>00220 }
<a name="l00221"></a><a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">00221</a> <span class="keywordtype">void</span> <a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(RakNet::RakString httpResult)
<a name="l00222"></a>00222 {
<a name="l00223"></a>00223         printf(<span class="stringliteral">&quot;--- Last result read ---\n&quot;</span>);
<a name="l00224"></a>00224         printf(<span class="stringliteral">&quot;%s&quot;</span>, httpResult.C_String());
<a name="l00225"></a>00225 }
<a name="l00226"></a><a class="code" href="php_client_8cpp.html#a026466719336c2763c41ef90819e355e">00226</a> <span class="keywordtype">void</span> <a class="code" href="php_client_8cpp.html#a026466719336c2763c41ef90819e355e">PrintFieldColumns</a>(<span class="keywordtype">void</span>)
<a name="l00227"></a>00227 {
<a name="l00228"></a>00228         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> colIndex;
<a name="l00229"></a>00229         RakNet::RakString columnName;
<a name="l00230"></a>00230         RakNet::RakString value;
<a name="l00231"></a>00231         <span class="keywordflow">for</span> (colIndex=0; colIndex &lt; phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#af51cc5bbd5b54a955ddbac13bd2b6609" title="Returns the number of fields set with SetField()">GetFieldCount</a>(); colIndex++)
<a name="l00232"></a>00232         {
<a name="l00233"></a>00233                 phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a3cfe77b74364ef6b7a33111b3d6f47fa">GetField</a>(colIndex, columnName, value);
<a name="l00234"></a>00234                 printf(<span class="stringliteral">&quot;%i. %s\n&quot;</span>, colIndex+1, columnName.C_String());
<a name="l00235"></a>00235         }
<a name="l00236"></a>00236 }
<a name="l00237"></a><a class="code" href="php_client_8cpp.html#aa7cbd044622050d6a36486ef01c954ed">00237</a> <span class="keywordtype">bool</span> <a class="code" href="php_client_8cpp.html#aa7cbd044622050d6a36486ef01c954ed">RunTest</a>()
<a name="l00238"></a>00238 {
<a name="l00239"></a>00239         RakNet::RakString httpResult;
<a name="l00240"></a>00240         <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260">ReadResultEnum</a> rr;
<a name="l00241"></a>00241         <span class="keywordtype">char</span> <a class="code" href="client_8cpp.html#af53f92900705f7de3c139a05b2f9ef16">ch</a>[32];
<a name="l00242"></a>00242         printf(<span class="stringliteral">&quot;Warning, table must be clear before starting the test.\n&quot;</span>);
<a name="l00243"></a>00243         printf(<span class="stringliteral">&quot;Press enter to start\n&quot;</span>);
<a name="l00244"></a>00244         gets(ch);
<a name="l00245"></a>00245 
<a name="l00246"></a>00246         printf(<span class="stringliteral">&quot;*** Testing initial table is empty.\n&quot;</span>);
<a name="l00247"></a>00247         <span class="comment">// Table should start empty</span>
<a name="l00248"></a>00248         <a class="code" href="php_client_8cpp.html#af9e398a913e71314bad0c13c7bb54226">DownloadTable</a>();
<a name="l00249"></a>00249         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a86460664cc9eb253a861482546f477fb">HaltOnUnexpectedResult</a>(rr=<a class="code" href="php_client_8cpp.html#aadf883618f65cad7edefa543ec584315">ReadResult</a>(httpResult), <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a71647edbfa9f3144a2db8c84ff7407b3">RR_EMPTY_TABLE</a>))
<a name="l00250"></a>00250                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00251"></a>00251         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a3570941b3bd6c1ac54b8b3192165b166">PassTestOnEmptyDownloadedTable</a>()==<span class="keyword">false</span>)
<a name="l00252"></a>00252                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00253"></a>00253 
<a name="l00254"></a>00254         printf(<span class="stringliteral">&quot;*** Downloading again, to ensure download does not modify the table.\n&quot;</span>);
<a name="l00255"></a>00255         <span class="comment">// Downloading should not modify the table</span>
<a name="l00256"></a>00256         <a class="code" href="php_client_8cpp.html#af9e398a913e71314bad0c13c7bb54226">DownloadTable</a>();
<a name="l00257"></a>00257         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a86460664cc9eb253a861482546f477fb">HaltOnUnexpectedResult</a>(rr=<a class="code" href="php_client_8cpp.html#aadf883618f65cad7edefa543ec584315">ReadResult</a>(httpResult), <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a71647edbfa9f3144a2db8c84ff7407b3">RR_EMPTY_TABLE</a>))
<a name="l00258"></a>00258                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00259"></a>00259         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a3570941b3bd6c1ac54b8b3192165b166">PassTestOnEmptyDownloadedTable</a>()==<span class="keyword">false</span>)
<a name="l00260"></a>00260                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00261"></a>00261 
<a name="l00262"></a>00262         printf(<span class="stringliteral">&quot;*** Testing upload.\n&quot;</span>);
<a name="l00263"></a>00263         <span class="comment">// Upload values likely to mess up PHP</span>
<a name="l00264"></a>00264         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField1&quot;</span>,<span class="stringliteral">&quot;0&quot;</span>);
<a name="l00265"></a>00265         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField2&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);
<a name="l00266"></a>00266         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField3&quot;</span>,<span class="stringliteral">&quot; &quot;</span>);
<a name="l00267"></a>00267         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField4&quot;</span>,<span class="stringliteral">&quot;!@#$%^&amp;*(&quot;</span>);
<a name="l00268"></a>00268         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField5&quot;</span>,<span class="stringliteral">&quot;A somewhat big long string as these things typically go.\nIt even has a linebreak!&quot;</span>);
<a name="l00269"></a>00269         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField6&quot;</span>,<span class="stringliteral">&quot;=&quot;</span>);
<a name="l00270"></a>00270         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a0ef3622bfec30ffc3c46d52cc9dcfe29">UploadTable</a>(<span class="stringliteral">&quot;beammeup&quot;</span>, <span class="stringliteral">&quot;FirstClientUpload&quot;</span>, 80, <span class="keyword">false</span>);
<a name="l00271"></a>00271         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a86460664cc9eb253a861482546f477fb">HaltOnUnexpectedResult</a>(rr=<a class="code" href="php_client_8cpp.html#aadf883618f65cad7edefa543ec584315">ReadResult</a>(httpResult), <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a71647edbfa9f3144a2db8c84ff7407b3">RR_EMPTY_TABLE</a>))
<a name="l00272"></a>00272                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00273"></a>00273         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a3570941b3bd6c1ac54b8b3192165b166">PassTestOnEmptyDownloadedTable</a>()==<span class="keyword">false</span>)
<a name="l00274"></a>00274                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00275"></a>00275 
<a name="l00276"></a>00276         printf(<span class="stringliteral">&quot;*** Testing download, should match upload exactly.\n&quot;</span>);
<a name="l00277"></a>00277         <span class="comment">// Download what we just uploaded</span>
<a name="l00278"></a>00278         <a class="code" href="php_client_8cpp.html#af9e398a913e71314bad0c13c7bb54226">DownloadTable</a>();
<a name="l00279"></a>00279         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a86460664cc9eb253a861482546f477fb">HaltOnUnexpectedResult</a>(rr=<a class="code" href="php_client_8cpp.html#aadf883618f65cad7edefa543ec584315">ReadResult</a>(httpResult), <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a718985db19964fa3e70140a9f14ef182">RR_READ_TABLE</a>))
<a name="l00280"></a>00280                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00281"></a>00281         <span class="comment">// Check results</span>
<a name="l00282"></a>00282         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a874d6cadbebbf29c5b1925a928008e26">VerifyDownloadMatchesUpload</a>(1,0)==<span class="keyword">false</span>)
<a name="l00283"></a>00283                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00284"></a>00284 
<a name="l00285"></a>00285         printf(<span class="stringliteral">&quot;*** Testing that download works twice in a row.\n&quot;</span>);
<a name="l00286"></a>00286         <span class="comment">// Make sure download works twice</span>
<a name="l00287"></a>00287         <a class="code" href="php_client_8cpp.html#af9e398a913e71314bad0c13c7bb54226">DownloadTable</a>();
<a name="l00288"></a>00288         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a86460664cc9eb253a861482546f477fb">HaltOnUnexpectedResult</a>(rr=<a class="code" href="php_client_8cpp.html#aadf883618f65cad7edefa543ec584315">ReadResult</a>(httpResult), <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a718985db19964fa3e70140a9f14ef182">RR_READ_TABLE</a>))
<a name="l00289"></a>00289                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00290"></a>00290         <span class="comment">// Check results</span>
<a name="l00291"></a>00291         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a874d6cadbebbf29c5b1925a928008e26">VerifyDownloadMatchesUpload</a>(1,0)==<span class="keyword">false</span>)
<a name="l00292"></a>00292                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00293"></a>00293 
<a name="l00294"></a>00294         printf(<span class="stringliteral">&quot;*** Testing reuploading a client to modify fields.\n&quot;</span>);
<a name="l00295"></a>00295         <span class="comment">// Modify fields</span>
<a name="l00296"></a>00296         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField1&quot;</span>,<span class="stringliteral">&quot;zero&quot;</span>);
<a name="l00297"></a>00297         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField2&quot;</span>,<span class="stringliteral">&quot;empty&quot;</span>);
<a name="l00298"></a>00298         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField3&quot;</span>,<span class="stringliteral">&quot;space&quot;</span>);
<a name="l00299"></a>00299         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField4&quot;</span>,<span class="stringliteral">&quot;characters&quot;</span>);
<a name="l00300"></a>00300         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField5&quot;</span>,<span class="stringliteral">&quot;A shorter string&quot;</span>);
<a name="l00301"></a>00301         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField6&quot;</span>,<span class="stringliteral">&quot;Test field 6&quot;</span>);
<a name="l00302"></a>00302         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a0ef3622bfec30ffc3c46d52cc9dcfe29">UploadTable</a>(<span class="stringliteral">&quot;beammeup&quot;</span>, <span class="stringliteral">&quot;FirstClientUpload&quot;</span>, 80, <span class="keyword">false</span>);
<a name="l00303"></a>00303         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a86460664cc9eb253a861482546f477fb">HaltOnUnexpectedResult</a>(rr=<a class="code" href="php_client_8cpp.html#aadf883618f65cad7edefa543ec584315">ReadResult</a>(httpResult), <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a71647edbfa9f3144a2db8c84ff7407b3">RR_EMPTY_TABLE</a>))
<a name="l00304"></a>00304         {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00305"></a>00305         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a3570941b3bd6c1ac54b8b3192165b166">PassTestOnEmptyDownloadedTable</a>()==<span class="keyword">false</span>)
<a name="l00306"></a>00306                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00307"></a>00307 
<a name="l00308"></a>00308         printf(<span class="stringliteral">&quot;*** Testing that downloading returns modified fields.\n&quot;</span>);
<a name="l00309"></a>00309         <span class="comment">// Download what we just uploaded</span>
<a name="l00310"></a>00310         <a class="code" href="php_client_8cpp.html#af9e398a913e71314bad0c13c7bb54226">DownloadTable</a>();
<a name="l00311"></a>00311         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a86460664cc9eb253a861482546f477fb">HaltOnUnexpectedResult</a>(rr=<a class="code" href="php_client_8cpp.html#aadf883618f65cad7edefa543ec584315">ReadResult</a>(httpResult), <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a718985db19964fa3e70140a9f14ef182">RR_READ_TABLE</a>))
<a name="l00312"></a>00312                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00313"></a>00313         <span class="comment">// Check results</span>
<a name="l00314"></a>00314         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a874d6cadbebbf29c5b1925a928008e26">VerifyDownloadMatchesUpload</a>(1,0)==<span class="keyword">false</span>)
<a name="l00315"></a>00315                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00316"></a>00316 
<a name="l00317"></a>00317         printf(<span class="stringliteral">&quot;*** Testing that downloading works twice.\n&quot;</span>);
<a name="l00318"></a>00318         <span class="comment">// Make sure download works twice</span>
<a name="l00319"></a>00319         <a class="code" href="php_client_8cpp.html#af9e398a913e71314bad0c13c7bb54226">DownloadTable</a>();
<a name="l00320"></a>00320         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a86460664cc9eb253a861482546f477fb">HaltOnUnexpectedResult</a>(rr=<a class="code" href="php_client_8cpp.html#aadf883618f65cad7edefa543ec584315">ReadResult</a>(httpResult), <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a718985db19964fa3e70140a9f14ef182">RR_READ_TABLE</a>))
<a name="l00321"></a>00321                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00322"></a>00322         <span class="comment">// Check results</span>
<a name="l00323"></a>00323         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a874d6cadbebbf29c5b1925a928008e26">VerifyDownloadMatchesUpload</a>(1,0)==<span class="keyword">false</span>)
<a name="l00324"></a>00324                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00325"></a>00325 
<a name="l00326"></a>00326         printf(<span class="stringliteral">&quot;*** Testing upload of a second client.\n&quot;</span>);
<a name="l00327"></a>00327         <span class="comment">// Upload another client</span>
<a name="l00328"></a>00328         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField1&quot;</span>,<span class="stringliteral">&quot;0&quot;</span>);
<a name="l00329"></a>00329         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField2&quot;</span>,<span class="stringliteral">&quot;&quot;</span>);
<a name="l00330"></a>00330         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField3&quot;</span>,<span class="stringliteral">&quot; &quot;</span>);
<a name="l00331"></a>00331         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a8f91f59a6f6b7f6849d8601928134651">SetField</a>(<span class="stringliteral">&quot;TestField4&quot;</span>,<span class="stringliteral">&quot;Client two characters !@#$%^&amp;*(&quot;</span>);
<a name="l00332"></a>00332         phpConnections-&gt;<a class="code" href="class_p_h_p_connections.html#a0ef3622bfec30ffc3c46d52cc9dcfe29">UploadTable</a>(<span class="stringliteral">&quot;beammeup&quot;</span>, <span class="stringliteral">&quot;SecondClientUpload&quot;</span>, 80, <span class="keyword">false</span>);
<a name="l00333"></a>00333         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a86460664cc9eb253a861482546f477fb">HaltOnUnexpectedResult</a>(rr=<a class="code" href="php_client_8cpp.html#aadf883618f65cad7edefa543ec584315">ReadResult</a>(httpResult), <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a71647edbfa9f3144a2db8c84ff7407b3">RR_EMPTY_TABLE</a>))
<a name="l00334"></a>00334         {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00335"></a>00335         <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a3570941b3bd6c1ac54b8b3192165b166">PassTestOnEmptyDownloadedTable</a>()==<span class="keyword">false</span>)
<a name="l00336"></a>00336                 {<a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); <span class="keywordflow">return</span> <span class="keyword">false</span>;}
<a name="l00337"></a>00337         <span class="comment">/*RakNetTimeMS startTime = RakNet::GetTimeMS();</span>
<a name="l00338"></a>00338 <span class="comment"></span>
<a name="l00339"></a>00339 <span class="comment">        printf(&quot;*** Testing 20 repeated downloads.\n&quot;);</span>
<a name="l00340"></a>00340 <span class="comment">        printf(&quot;Field columns\n&quot;);</span>
<a name="l00341"></a>00341 <span class="comment">        PrintFieldColumns();</span>
<a name="l00342"></a>00342 <span class="comment"></span>
<a name="l00343"></a>00343 <span class="comment">        // Download repeatedly</span>
<a name="l00344"></a>00344 <span class="comment">        unsigned int downloadCount=0;</span>
<a name="l00345"></a>00345 <span class="comment">        while (downloadCount &lt; 20)</span>
<a name="l00346"></a>00346 <span class="comment">        {</span>
<a name="l00347"></a>00347 <span class="comment">                printf(&quot;*** (%i) Downloading &#39;FirstClientUpload&#39;\n&quot;, downloadCount+1);</span>
<a name="l00348"></a>00348 <span class="comment">                // Download again (First client)</span>
<a name="l00349"></a>00349 <span class="comment">                DownloadTable();</span>
<a name="l00350"></a>00350 <span class="comment">                if (HaltOnUnexpectedResult(rr=ReadResult(httpResult), RR_READ_TABLE))</span>
<a name="l00351"></a>00351 <span class="comment">                        {PrintHttpResult(httpResult); return false;}</span>
<a name="l00352"></a>00352 <span class="comment">                // Check results</span>
<a name="l00353"></a>00353 <span class="comment">                // DOn&#39;t have this stored anymore</span>
<a name="l00354"></a>00354 <span class="comment">//              if (VerifyDownloadMatchesUpload(2,0)==false)</span>
<a name="l00355"></a>00355 <span class="comment">//                      {PrintHttpResult(httpResult); return false;}</span>
<a name="l00356"></a>00356 <span class="comment"></span>
<a name="l00357"></a>00357 <span class="comment">                printf(&quot;*** (%i) Downloading &#39;SecondClientUpload&#39;\n&quot;, downloadCount+1);</span>
<a name="l00358"></a>00358 <span class="comment">                // Download again (second client)</span>
<a name="l00359"></a>00359 <span class="comment">                DownloadTable();</span>
<a name="l00360"></a>00360 <span class="comment">                if (HaltOnUnexpectedResult(rr=ReadResult(httpResult), RR_READ_TABLE))</span>
<a name="l00361"></a>00361 <span class="comment">                        {PrintHttpResult(httpResult); return false;}</span>
<a name="l00362"></a>00362 <span class="comment">                // Check results</span>
<a name="l00363"></a>00363 <span class="comment">                if (VerifyDownloadMatchesUpload(2,1)==false)</span>
<a name="l00364"></a>00364 <span class="comment">                        {PrintHttpResult(httpResult); return false;}</span>
<a name="l00365"></a>00365 <span class="comment"></span>
<a name="l00366"></a>00366 <span class="comment">                downloadCount++;</span>
<a name="l00367"></a>00367 <span class="comment"></span>
<a name="l00368"></a>00368 <span class="comment">                RakSleep(1000);</span>
<a name="l00369"></a>00369 <span class="comment">        }</span>
<a name="l00370"></a>00370 <span class="comment"></span>
<a name="l00371"></a>00371 <span class="comment">        printf(&quot;*** Waiting for 70 seconds to have elapsed...\n&quot;);</span>
<a name="l00372"></a>00372 <span class="comment">        RakSleep(70000 - (RakNet::GetTimeMS()-startTime));</span>
<a name="l00373"></a>00373 <span class="comment"></span>
<a name="l00374"></a>00374 <span class="comment"></span>
<a name="l00375"></a>00375 <span class="comment">        printf(&quot;*** Testing that table is now clear.\n&quot;);</span>
<a name="l00376"></a>00376 <span class="comment">        // Table should be cleared</span>
<a name="l00377"></a>00377 <span class="comment">        DownloadTable();</span>
<a name="l00378"></a>00378 <span class="comment">        if (HaltOnUnexpectedResult(rr=ReadResult(httpResult), RR_EMPTY_TABLE))</span>
<a name="l00379"></a>00379 <span class="comment">                {PrintHttpResult(httpResult); return false;}</span>
<a name="l00380"></a>00380 <span class="comment">        if (PassTestOnEmptyDownloadedTable()==false)</span>
<a name="l00381"></a>00381 <span class="comment">                {PrintHttpResult(httpResult); return false;}</span>
<a name="l00382"></a>00382 <span class="comment"></span>
<a name="l00383"></a>00383 <span class="comment">        printf(&quot;*** Testing upload and download. No clients should be downloaded.\n&quot;);</span>
<a name="l00384"></a>00384 <span class="comment">        phpConnections-&gt;ClearFields();</span>
<a name="l00385"></a>00385 <span class="comment">        phpConnections-&gt;SetField(&quot;TestField1&quot;,&quot;NULL&quot;);</span>
<a name="l00386"></a>00386 <span class="comment">        UploadAndDownloadTable(&quot;FirstClientUpload&quot;, 80);</span>
<a name="l00387"></a>00387 <span class="comment">        if (HaltOnUnexpectedResult(rr=ReadResult(httpResult), RR_EMPTY_TABLE))</span>
<a name="l00388"></a>00388 <span class="comment">                {PrintHttpResult(httpResult); return false;}</span>
<a name="l00389"></a>00389 <span class="comment">        if (PassTestOnEmptyDownloadedTable()==false)</span>
<a name="l00390"></a>00390 <span class="comment">                {PrintHttpResult(httpResult); return false;}</span>
<a name="l00391"></a>00391 <span class="comment"></span>
<a name="l00392"></a>00392 <span class="comment">        printf(&quot;*** Testing upload and download. One client should be downloaded.\n&quot;);</span>
<a name="l00393"></a>00393 <span class="comment">        UploadAndDownloadTable(&quot;ThirdClientUpload&quot;, 80);</span>
<a name="l00394"></a>00394 <span class="comment">        if (HaltOnUnexpectedResult(rr=ReadResult(httpResult), RR_READ_TABLE))</span>
<a name="l00395"></a>00395 <span class="comment">                {PrintHttpResult(httpResult); return false;}</span>
<a name="l00396"></a>00396 <span class="comment">        if (VerifyDownloadMatchesUpload(1,0)==false)</span>
<a name="l00397"></a>00397 <span class="comment">                {PrintHttpResult(httpResult); return false;}*/</span>
<a name="l00398"></a>00398 
<a name="l00399"></a>00399         <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00400"></a>00400 }
<a name="l00401"></a>00401 
<a name="l00402"></a>00402 <span class="keywordtype">void</span> <a class="code" href="php_client_8cpp.html#ab7c2ce3c89981d696adff6334cb20a6c">OutputBody</a>(HTTPConnection&amp; http, <span class="keyword">const</span> <span class="keywordtype">char</span> *path, <span class="keyword">const</span> <span class="keywordtype">char</span> *data, TCPInterface&amp; <a class="code" href="php_client_8cpp.html#a9b7b8b2a2e29b2fc99c57d80741bd649">tcp</a>);
<a name="l00403"></a>00403 
<a name="l00404"></a><a class="code" href="php_client_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">00404</a> <span class="keywordtype">int</span> <a class="code" href="php_client_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>**argv)
<a name="l00405"></a>00405 {
<a name="l00406"></a>00406         <span class="keywordtype">char</span> connectedclients[1024];
<a name="l00407"></a>00407         <span class="keywordtype">char</span> *guid, *node, *tmpid, *nodeid;
<a name="l00408"></a>00408         <span class="keywordtype">char</span> allnodes[2048], <a class="code" href="structnode__info.html">node_info</a>[256];
<a name="l00409"></a>00409         <span class="keywordtype">int</span> loop = 0, <a class="code" href="client_8s3d.html#ae4b896af19aae26b1e5317acf4126807">index</a> = 1;
<a name="l00410"></a>00410         <span class="keywordtype">char</span> nodes[512];
<a name="l00411"></a>00411         <span class="keywordtype">bool</span> quit = <span class="keyword">false</span>;
<a name="l00412"></a>00412         <span class="keywordtype">char</span> <a class="code" href="client_8cpp.html#af53f92900705f7de3c139a05b2f9ef16">ch</a>;
<a name="l00413"></a>00413         <span class="keywordtype">char</span> iddata[128];
<a name="l00414"></a>00414         <span class="keywordtype">char</span> website[256];
<a name="l00415"></a>00415         <span class="keywordtype">char</span> pathToPHP[256];
<a name="l00416"></a>00416         RakNet::RakString httpResult;
<a name="l00417"></a>00417         <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260">ReadResultEnum</a> rr;
<a name="l00418"></a>00418         <span class="keywordtype">char</span> ipdetails[128];
<a name="l00419"></a>00419 
<a name="l00420"></a>00420         srand((<span class="keywordtype">unsigned</span>)time(0));
<a name="l00421"></a>00421         <span class="comment">//connect using startclient</span>
<a name="l00422"></a>00422         <span class="keywordtype">int</span> connected = <a class="code" href="client_8cpp.html#a5d8297157b67b5fffaae66ec8f7c90ff">startclient</a>(<span class="stringliteral">&quot;128.16.7.66&quot;</span>, 12050<span class="comment">/*&quot;193.205.82.196&quot;, 50000*/</span>,<span class="stringliteral">&quot;UCL&quot;</span>,<span class="stringliteral">&quot;VISITOR&quot;</span>,<span class="stringliteral">&quot;m016.cfg&quot;</span>,<span class="keyword">false</span>);
<a name="l00423"></a>00423 <span class="preprocessor">#if defined(_WIN32)</span>
<a name="l00424"></a>00424 <span class="preprocessor"></span>        Sleep(100);
<a name="l00425"></a>00425 <span class="preprocessor">#else</span>
<a name="l00426"></a>00426 <span class="preprocessor"></span>        sleep(2);
<a name="l00427"></a>00427 <span class="preprocessor">#endif</span>
<a name="l00428"></a>00428 <span class="preprocessor"></span>        <span class="keywordflow">if</span> (!connected)
<a name="l00429"></a>00429         { exit(1); }
<a name="l00430"></a>00430 
<a name="l00431"></a>00431         printf(<span class="stringliteral">&quot;Starts streaming to php webpage: http://web4.cs.ucl.ac.uk/research/vr/Projects/BEAMING/wole/BeamingSceneService/List/Connections.php\n&quot;</span>);
<a name="l00432"></a>00432         printf(<span class="stringliteral">&quot;Commands:\n(Q)uit\n&quot;</span>);
<a name="l00433"></a>00433         <span class="comment">//printf(&quot;connected = %i\n&quot;, connected);</span>
<a name="l00434"></a>00434 
<a name="l00435"></a>00435 
<a name="l00436"></a>00436         strcpy(iddata,<span class="stringliteral">&quot;&quot;</span>);
<a name="l00437"></a>00437 
<a name="l00438"></a>00438         printf(<span class="stringliteral">&quot;Streaming to http://web4.cs.ucl.ac.uk/research/vr/Projects/BEAMING/wole/BeamingSceneService/List/Connections.php ...\n&quot;</span>);
<a name="l00439"></a>00439 
<a name="l00440"></a>00440         <a class="code" href="php_client_8cpp.html#a9b7b8b2a2e29b2fc99c57d80741bd649">tcp</a> = RakNet::OP_NEW&lt;TCPInterface&gt;(__FILE__,__LINE__);
<a name="l00441"></a>00441         <a class="code" href="php_client_8cpp.html#a4acffdf958524fce3fc4f9feed216480">httpConnection</a> = RakNet::OP_NEW&lt;HTTPConnection&gt;(__FILE__,__LINE__);
<a name="l00442"></a>00442         phpConnections = RakNet::OP_NEW&lt;PHPConnections&gt;(__FILE__,__LINE__);
<a name="l00443"></a>00443 <span class="comment">//      RakNetTime lastTouched = 0;</span>
<a name="l00444"></a>00444         <span class="comment">// Start the TCP thread. This is used for general TCP communication, whether it is for webpages, sending emails, or telnet</span>
<a name="l00445"></a>00445         <a class="code" href="php_client_8cpp.html#a9b7b8b2a2e29b2fc99c57d80741bd649">tcp</a>-&gt;Start(0, 64);
<a name="l00446"></a>00446 
<a name="l00447"></a>00447         strcpy(website, <span class="stringliteral">&quot;web4.cs.ucl.ac.uk&quot;</span>);
<a name="l00448"></a>00448         strcpy(pathToPHP, <span class="stringliteral">&quot;research/vr/Projects/BEAMING/wole/BeamingSceneService/List/Connections.php&quot;</span>);
<a name="l00449"></a>00449 
<a name="l00450"></a>00450         <span class="keywordflow">if</span> (website[strlen(website)-1]!=<span class="charliteral">&#39;/&#39;</span> &amp;&amp; pathToPHP[0]!=<span class="charliteral">&#39;/&#39;</span>)
<a name="l00451"></a>00451         {
<a name="l00452"></a>00452                 memmove(pathToPHP+1, pathToPHP, strlen(pathToPHP)+1);
<a name="l00453"></a>00453                 pathToPHP[0]=<span class="charliteral">&#39;/&#39;</span>;
<a name="l00454"></a>00454         }
<a name="l00455"></a>00455 
<a name="l00456"></a>00456         <span class="comment">// This creates an HTTP connection using TCPInterface. It allows you to Post messages to and parse messages from webservers.</span>
<a name="l00457"></a>00457         <span class="comment">// The connection attempt is asynchronous, and is handled automatically as HTTPConnection::Update() is called</span>
<a name="l00458"></a>00458         httpConnection-&gt;Init(<a class="code" href="php_client_8cpp.html#a9b7b8b2a2e29b2fc99c57d80741bd649">tcp</a>, website);
<a name="l00459"></a>00459    
<a name="l00460"></a>00460         <span class="comment">// This adds specific parsing functionality to HTTPConnection, in order to communicate with Connections.php</span>
<a name="l00461"></a>00461         phpConnections-&gt;Init(httpConnection, pathToPHP);
<a name="l00462"></a>00462 
<a name="l00463"></a>00463         <span class="keywordflow">while</span> (!quit)
<a name="l00464"></a>00464         {
<a name="l00465"></a>00465                 <span class="comment">//check incoming packets</span>
<a name="l00466"></a>00466                 <a class="code" href="client_8cpp.html#a83f8adca24e250bfb5c9a90a35503ae9">check</a>();
<a name="l00467"></a>00467                 <span class="comment">//get information on all connected clients. </span>
<a name="l00468"></a>00468                 <span class="comment">//printf(&quot;number of connected clients %i\n&quot;,getPeersID(connectedclients));</span>
<a name="l00469"></a>00469                 <a class="code" href="client_8cpp.html#ae20598e6116c0ec6646fa9a0f886f027">getPeersID</a>(connectedclients);
<a name="l00470"></a>00470                 <span class="comment">//printf(&quot;%s\n&quot;,connectedclients);</span>
<a name="l00471"></a>00471                 <span class="keywordflow">for</span> (guid = strtok (connectedclients, <span class="stringliteral">&quot;;&quot;</span>); guid != NULL;
<a name="l00472"></a>00472                    guid = strtok (guid + strlen (guid) + 1, <span class="stringliteral">&quot;;&quot;</span>))
<a name="l00473"></a>00473                 {
<a name="l00474"></a>00474                         strncpy (iddata, guid, <span class="keyword">sizeof</span> (iddata));
<a name="l00475"></a>00475                         <span class="comment">//for each connected guid in the database, get the nodes information.</span>
<a name="l00476"></a>00476                         <a class="code" href="client_8cpp.html#af9b6a701fc265f98834b4d453718f831">getNodesInfo</a>(iddata,allnodes);
<a name="l00477"></a>00477                         <span class="comment">//printf(&quot;%s\n&quot;,allnodes);</span>
<a name="l00478"></a>00478                         <span class="keywordflow">for</span> (node = strtok (allnodes, <span class="stringliteral">&quot;;&quot;</span>); node != NULL;
<a name="l00479"></a>00479                            node = strtok (node + strlen (node) + 1, <span class="stringliteral">&quot;;&quot;</span>))
<a name="l00480"></a>00480                         {
<a name="l00481"></a>00481                                 strncpy (node_info, node, <span class="keyword">sizeof</span> (node_info));
<a name="l00482"></a>00482                                 <span class="comment">//phpConnections-&gt;SetField(RakNet::RakString(&quot;Node &quot;) + RakNet::RakString(&quot;%d&quot;,loop),RakNet::RakString(node));</span>
<a name="l00483"></a>00483                                 <span class="keywordflow">for</span> (tmpid = strtok (node_info, <span class="stringliteral">&quot;,&quot;</span>); tmpid != NULL;
<a name="l00484"></a>00484                                    tmpid = strtok (tmpid + strlen (tmpid) + 1, <span class="stringliteral">&quot;,&quot;</span>))
<a name="l00485"></a>00485                                 {
<a name="l00486"></a>00486                                         <span class="keywordflow">switch</span> (loop) 
<a name="l00487"></a>00487                                         {
<a name="l00488"></a>00488                                         <span class="keywordflow">case</span> 0:<span class="comment">// first token is the client name (in the case of AVATAR type, avatar id)</span>
<a name="l00489"></a>00489                                                 phpConnections-&gt;SetField(<span class="stringliteral">&quot;Client Name&quot;</span>,tmpid);
<a name="l00490"></a>00490                                                 <span class="keywordflow">break</span>;
<a name="l00491"></a>00491                                         <span class="keywordflow">case</span> 1:<span class="comment">// second token is the node_id </span>
<a name="l00492"></a>00492                                                 phpConnections-&gt;SetField(<span class="stringliteral">&quot;Node ID&quot;</span>,tmpid);
<a name="l00493"></a>00493                                                 <span class="keywordflow">break</span>;
<a name="l00494"></a>00494                                         <span class="keywordflow">case</span> 2: <span class="comment">//third token is the TYPE</span>
<a name="l00495"></a>00495                                                 phpConnections-&gt;SetField(<span class="stringliteral">&quot;Node Type&quot;</span>,tmpid);
<a name="l00496"></a>00496                                                 <span class="keywordflow">break</span>;
<a name="l00497"></a>00497                                         <span class="keywordflow">case</span> 3: <span class="comment">//fouth token is the config</span>
<a name="l00498"></a>00498                                                 phpConnections-&gt;SetField(<span class="stringliteral">&quot;Config&quot;</span>,tmpid);
<a name="l00499"></a>00499                                                 <span class="keywordflow">break</span>;
<a name="l00500"></a>00500                                         }
<a name="l00501"></a>00501                                         loop++;
<a name="l00502"></a>00502                                 } <span class="comment">//end for</span>
<a name="l00503"></a>00503                                 loop=0; <span class="comment">//reset</span>
<a name="l00504"></a>00504                                 <a class="code" href="client_8cpp.html#ac1dd5fc2e432f4c27c4c6c8df1de72b6" title="returns the ip address and port of the specified GUID">getIPinfo</a>(iddata,ipdetails);
<a name="l00505"></a>00505                                 phpConnections-&gt;SetField(<span class="stringliteral">&quot;_System_Address&quot;</span>,ipdetails);
<a name="l00506"></a>00506                                 phpConnections-&gt;UploadTable(<span class="stringliteral">&quot;beammeup&quot;</span>, RakNet::RakString(<span class="stringliteral">&quot;%s Node %d&quot;</span>,guid,<a class="code" href="client_8s3d.html#ae4b896af19aae26b1e5317acf4126807">index</a>), 80, <span class="keyword">false</span>);
<a name="l00507"></a>00507                                 <span class="keywordflow">if</span> (<a class="code" href="php_client_8cpp.html#a86460664cc9eb253a861482546f477fb">HaltOnUnexpectedResult</a>(rr=<a class="code" href="php_client_8cpp.html#aadf883618f65cad7edefa543ec584315">ReadResult</a>(httpResult), <a class="code" href="php_client_8cpp.html#a56a0b08d4cccd349f6e48c6535a47260a71647edbfa9f3144a2db8c84ff7407b3">RR_EMPTY_TABLE</a>))
<a name="l00508"></a>00508                                 {
<a name="l00509"></a>00509                                         <a class="code" href="php_client_8cpp.html#ac0d4dff6299ac50d5df42206ab50e122">PrintHttpResult</a>(httpResult); 
<a name="l00510"></a>00510                                         <span class="comment">//return false;</span>
<a name="l00511"></a>00511                                 }
<a name="l00512"></a>00512                                 <a class="code" href="client_8s3d.html#ae4b896af19aae26b1e5317acf4126807">index</a>++;
<a name="l00513"></a>00513                                 RakSleep(10);
<a name="l00514"></a>00514                         } <span class="comment">//end for</span>
<a name="l00515"></a>00515                         <a class="code" href="client_8s3d.html#ae4b896af19aae26b1e5317acf4126807">index</a> = 1;
<a name="l00516"></a>00516                 } <span class="comment">//end for</span>
<a name="l00517"></a>00517                 RakSleep(1000); <span class="comment">//sleep for 2 seconds before uploading next set of records</span>
<a name="l00518"></a>00518                 <span class="keywordflow">if</span> (kbhit())
<a name="l00519"></a>00519                 {
<a name="l00520"></a>00520                         ch=getch();
<a name="l00521"></a>00521                         <span class="keywordflow">if</span> (ch==<span class="charliteral">&#39;q&#39;</span> || ch==<span class="charliteral">&#39;Q&#39;</span>)
<a name="l00522"></a>00522                         {
<a name="l00523"></a>00523                                 printf(<span class="stringliteral">&quot;Quitting.\n&quot;</span>);
<a name="l00524"></a>00524                                 quit=<span class="keyword">true</span>;
<a name="l00525"></a>00525                         }
<a name="l00526"></a>00526                 }<span class="comment">// end if kbhit()</span>
<a name="l00527"></a>00527         }<span class="comment">//end while</span>
<a name="l00528"></a>00528 
<a name="l00529"></a>00529         <span class="comment">// The destructor of each of these references the other, so delete in this order</span>
<a name="l00530"></a>00530         RakNet::OP_DELETE(phpConnections,__FILE__,__LINE__);
<a name="l00531"></a>00531         RakNet::OP_DELETE(httpConnection,__FILE__,__LINE__);
<a name="l00532"></a>00532         RakNet::OP_DELETE(<a class="code" href="php_client_8cpp.html#a9b7b8b2a2e29b2fc99c57d80741bd649">tcp</a>,__FILE__,__LINE__);
<a name="l00533"></a>00533         printf(<span class="stringliteral">&quot;Web streaming disabled.\n&quot;</span>);
<a name="l00534"></a>00534 
<a name="l00535"></a>00535         <span class="comment">//remove all nodes and clean up on exit </span>
<a name="l00536"></a>00536         <a class="code" href="client_8cpp.html#a66a21a3ed677f69961d8280482c5285a" title="use removeAllNodes() and stop() on exit">removeAllNodes</a>();
<a name="l00537"></a>00537         <a class="code" href="client_8cpp.html#a8c528baf37154d347366083f0f816846" title="use removeAllNodes() and stop() on exit">stop</a>();
<a name="l00538"></a>00538 }
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="php_client_8cpp.html">phpClient.cpp</a>      </li>

    <li class="footer">Generated on Wed Oct 17 2012 13:07:11 for Beaming Scene Service by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
