<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Beaming Scene Service: netClient/sampleClient.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  <td id="projectlogo"><img alt="Logo" src="BEAMING_LOGO2.jpg"/></td>
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Beaming Scene Service
   &#160;<span id="projectnumber">2.0</span>
   </div>
   <div id="projectbrief">RakNet wrapper for managing data communications between multiple Beaming clients</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('sample_client_8cpp.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">netClient/sampleClient.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="sample_client_8cpp.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00011"></a>00011 <span class="preprocessor">#include &lt;iostream&gt;</span>
<a name="l00012"></a>00012 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00013"></a>00013 <span class="preprocessor">#include &quot;Kbhit.h&quot;</span>
<a name="l00014"></a>00014 <span class="preprocessor">#include &quot;Getche.h&quot;</span>
<a name="l00015"></a>00015 <span class="preprocessor">#include &quot;<a class="code" href="net_client_2client_8h.html">client.h</a>&quot;</span>
<a name="l00016"></a>00016 <span class="preprocessor">#include &lt;stdlib.h&gt;</span>
<a name="l00017"></a>00017 <span class="preprocessor">#include &lt;time.h&gt;</span>
<a name="l00018"></a>00018 <span class="preprocessor">#if defined(_WIN32)</span>
<a name="l00019"></a>00019 <span class="preprocessor"></span><span class="preprocessor">#include &lt;windows.h&gt;</span>
<a name="l00020"></a>00020 <span class="preprocessor">#else</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#include&lt;unistd.h&gt;</span>
<a name="l00022"></a>00022 <span class="preprocessor">#include&lt;cstdlib&gt;</span>
<a name="l00023"></a>00023 <span class="preprocessor">#endif</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a>00025 
<a name="l00026"></a><a class="code" href="sample_client_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">00026</a> <span class="keywordtype">int</span> <a class="code" href="php_client_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>**argv)
<a name="l00027"></a>00027 {
<a name="l00028"></a>00028         srand((<span class="keywordtype">unsigned</span>)time(0));
<a name="l00029"></a>00029         <span class="keywordtype">float</span> px,py,pz,eh,ep,er,hh,hp,hr;
<a name="l00032"></a>00032         <span class="keywordtype">int</span> connected = <a class="code" href="client_8cpp.html#a5d8297157b67b5fffaae66ec8f7c90ff">startclient</a>(<span class="stringliteral">&quot;128.16.7.66&quot;</span>, 12050<span class="comment">/*&quot;193.205.82.196&quot;, 50000*/</span>,<span class="stringliteral">&quot;UCL&quot;</span>,<span class="stringliteral">&quot;VISITOR&quot;</span>,<span class="stringliteral">&quot;m016.cfg&quot;</span>,<span class="keyword">false</span>);
<a name="l00033"></a>00033 <span class="preprocessor">#if defined(_WIN32)</span>
<a name="l00034"></a>00034 <span class="preprocessor"></span>        Sleep(100);
<a name="l00035"></a>00035 <span class="preprocessor">#else</span>
<a name="l00036"></a>00036 <span class="preprocessor"></span>        sleep(2);
<a name="l00037"></a>00037 <span class="preprocessor">#endif</span>
<a name="l00038"></a>00038 <span class="preprocessor"></span>
<a name="l00039"></a>00039         printf(<span class="stringliteral">&quot;Commands:\n(Q)uit\n&#39;C&#39;reate objects\n&#39;M&#39;ove objects\n&#39;R&#39;otate objects\n&#39;F&#39;etch remote objects\n&#39;D&#39;estroy all objects\n&quot;</span>);
<a name="l00040"></a>00040         <span class="comment">//printf(&quot;connected = %i\n&quot;, connected);</span>
<a name="l00041"></a>00041 
<a name="l00042"></a>00042         <span class="keywordtype">bool</span> quit = <span class="keyword">false</span>;
<a name="l00043"></a>00043         <span class="keywordtype">char</span> <a class="code" href="client_8cpp.html#af53f92900705f7de3c139a05b2f9ef16">ch</a>;
<a name="l00044"></a>00044         <span class="keywordtype">char</span> buf[32];
<a name="l00045"></a>00045         <span class="keywordtype">float</span> j=0.f;
<a name="l00046"></a>00046         <span class="keywordtype">char</span> iddata[128];
<a name="l00047"></a>00047         <span class="keywordtype">char</span> type[128];
<a name="l00048"></a>00048         <span class="keywordtype">char</span> name[128];
<a name="l00049"></a>00049         <span class="keywordtype">char</span> <a class="code" href="client_8cpp.html#a2c2eb166cc67e18c577471bea6cf78ea">my_config</a>[128];
<a name="l00050"></a>00050         <span class="keywordtype">char</span> fname[128], lname[128];
<a name="l00051"></a>00051         strcpy(name,<span class="stringliteral">&quot;&quot;</span>);
<a name="l00052"></a>00052         strcpy(type,<span class="stringliteral">&quot;&quot;</span>);
<a name="l00053"></a>00053         strcpy(iddata,<span class="stringliteral">&quot;&quot;</span>);
<a name="l00054"></a>00054 
<a name="l00055"></a>00055         strcpy(buf,<span class="stringliteral">&quot;&quot;</span>);
<a name="l00056"></a>00056         <span class="keywordtype">float</span> tx,ty,tz,ax,ay,az,aw = 0.f;
<a name="l00059"></a>00059         <a class="code" href="client_8cpp.html#a5364594f37cc7c791454572fb81af6e3">addRocketBoxAvatar</a>(<span class="stringliteral">&quot;avatar&quot;</span>,<span class="stringliteral">&quot;m016.cfg&quot;</span>);
<a name="l00060"></a>00060         <a class="code" href="client_8cpp.html#a2ff5dc0a285a4b8d06489e2728b20355" title="sets the firstname and lastname for the avatar created with addRocketBoxAvatar">setAvatarName</a>(<span class="stringliteral">&quot;avatar&quot;</span>,<span class="stringliteral">&quot;John&quot;</span>,<span class="stringliteral">&quot;Doe&quot;</span>);
<a name="l00063"></a>00063         <a class="code" href="client_8cpp.html#a5d8f1002952639c6e140599d96c6cb03">addNode</a>(<span class="stringliteral">&quot;Head&quot;</span>,<span class="stringliteral">&quot;FACIAL&quot;</span>);
<a name="l00064"></a>00064         <a class="code" href="client_8cpp.html#ab6cf7aafc84a6ac5df7a4002567d5f22" title="updateFacialNodes(node_id, bool, 5 floats) updates the data for the FACIAL nodes that you created...">updateFacialNodes</a>(<span class="stringliteral">&quot;Head&quot;</span>,<span class="keyword">false</span>,0.5f,0.2f,0.f,0.f,0.f);
<a name="l00065"></a>00065 
<a name="l00066"></a>00066         <span class="keywordflow">while</span> (!quit)
<a name="l00067"></a>00067         {
<a name="l00070"></a>00070                 <a class="code" href="client_8cpp.html#a83f8adca24e250bfb5c9a90a35503ae9">check</a>();
<a name="l00071"></a>00071                 j = j + 0.001f;
<a name="l00072"></a>00072                 <span class="keywordflow">if</span> (j&gt;2.f) 
<a name="l00073"></a>00073                         j=-2.f;
<a name="l00076"></a>00076                 <a class="code" href="client_8cpp.html#aa7db119a47bec78a32f84652bb2412c2">updateRocketBoxAvatar</a>(<span class="stringliteral">&quot;avatar&quot;</span>,<span class="stringliteral">&quot;0&quot;</span>,j,-1.18448e-015,-2.70976e-008,0,0.707106,-3.09086e-008,0.707107);
<a name="l00077"></a>00077                 <span class="keywordflow">if</span> (kbhit())
<a name="l00078"></a>00078                 {
<a name="l00079"></a>00079                         ch=getch();
<a name="l00080"></a>00080                         <span class="keywordflow">if</span> (ch==<span class="charliteral">&#39;q&#39;</span> || ch==<span class="charliteral">&#39;Q&#39;</span>)
<a name="l00081"></a>00081                         {
<a name="l00082"></a>00082                                 printf(<span class="stringliteral">&quot;Quitting.\n&quot;</span>);
<a name="l00083"></a>00083                                 quit=<span class="keyword">true</span>;
<a name="l00084"></a>00084                         }
<a name="l00085"></a>00085                         <span class="keywordflow">if</span> (ch==<span class="charliteral">&#39;c&#39;</span> || ch==<span class="charliteral">&#39;C&#39;</span>)
<a name="l00086"></a>00086                         {
<a name="l00087"></a>00087                                 <span class="keywordtype">int</span> datatype = rand() % 9;
<a name="l00088"></a>00088                                 <span class="keyword">static</span> <span class="keywordtype">int</span> i = 0;
<a name="l00089"></a>00089                                 sprintf(buf,<span class="stringliteral">&quot;node%i&quot;</span>,i++);
<a name="l00090"></a>00090                                 <span class="comment">//add node</span>
<a name="l00091"></a>00091                                 <span class="keywordflow">switch</span> (datatype)
<a name="l00092"></a>00092                                 {
<a name="l00093"></a>00093                                 <span class="keywordflow">case</span> 0:
<a name="l00094"></a>00094                                         <span class="keywordtype">char</span> avname[32];
<a name="l00095"></a>00095                                         sprintf(avname,<span class="stringliteral">&quot;avatar%i_&quot;</span>,i++);
<a name="l00096"></a>00096                                         <a class="code" href="client_8cpp.html#a5364594f37cc7c791454572fb81af6e3">addRocketBoxAvatar</a>(avname,<span class="stringliteral">&quot;m016.cfg&quot;</span>);
<a name="l00097"></a>00097                                         <a class="code" href="client_8cpp.html#a2ff5dc0a285a4b8d06489e2728b20355" title="sets the firstname and lastname for the avatar created with addRocketBoxAvatar">setAvatarName</a>(avname,<span class="stringliteral">&quot;Another&quot;</span>,buf);
<a name="l00098"></a>00098                                         <a class="code" href="client_8cpp.html#aa7db119a47bec78a32f84652bb2412c2">updateRocketBoxAvatar</a>(avname,<span class="stringliteral">&quot;0&quot;</span>,0,-1.18448e-015,-2.70976e-008,0,0.707106,-3.09086e-008,0.707107);
<a name="l00099"></a>00099                                         <span class="keywordflow">break</span>;
<a name="l00100"></a>00100                                 <span class="keywordflow">case</span> 1:
<a name="l00101"></a>00101                                         <a class="code" href="client_8cpp.html#a5d8f1002952639c6e140599d96c6cb03">addNode</a>(buf,<span class="stringliteral">&quot;FACIAL&quot;</span>);
<a name="l00102"></a>00102                                         <a class="code" href="client_8cpp.html#ab6cf7aafc84a6ac5df7a4002567d5f22" title="updateFacialNodes(node_id, bool, 5 floats) updates the data for the FACIAL nodes that you created...">updateFacialNodes</a>(buf,<span class="keyword">false</span>,0.f,0.f,0.f,0.f,0.f);
<a name="l00103"></a>00103                                         <span class="keywordflow">break</span>;
<a name="l00104"></a>00104                                 <span class="keywordflow">case</span> 2:
<a name="l00105"></a>00105                                         <a class="code" href="client_8cpp.html#a5d8f1002952639c6e140599d96c6cb03">addNode</a>(buf,<span class="stringliteral">&quot;EMOTION&quot;</span>);
<a name="l00106"></a>00106                                         <a class="code" href="client_8cpp.html#a23c8c932283df62cd85c36cea3db2a03" title="updateEmotionNodes(node_id, 3 doubles) updates the data for the EMOTION nodes that you created...">updateEmotionNodes</a>(buf,0,0,0);
<a name="l00107"></a>00107                                         <span class="keywordflow">break</span>;
<a name="l00108"></a>00108                                 <span class="keywordflow">case</span> 3:
<a name="l00109"></a>00109                                         <a class="code" href="client_8cpp.html#a5d8f1002952639c6e140599d96c6cb03">addNode</a>(buf,<span class="stringliteral">&quot;VIDEO&quot;</span>);
<a name="l00110"></a>00110                                         <a class="code" href="client_8cpp.html#a3f4d7d8172d87e298dba1f4bfdf27dc6" title="updateVideoNodes(node_id, 2 strings, 3 integers and 1 double) updates the data for the VIDEO nodes th...">updateVideoNodes</a>(buf,<span class="stringliteral">&quot;127.0.0.1&quot;</span>,0,<span class="stringliteral">&quot;http://localhost&quot;</span>,1,1,1);
<a name="l00111"></a>00111                                         <span class="keywordflow">break</span>;
<a name="l00112"></a>00112                                 <span class="keywordflow">case</span> 4:
<a name="l00113"></a>00113                                         <a class="code" href="client_8cpp.html#a5d8f1002952639c6e140599d96c6cb03">addNode</a>(buf,<span class="stringliteral">&quot;TACTILE&quot;</span>);
<a name="l00114"></a>00114                                         <a class="code" href="client_8cpp.html#abbb8dae5fba841e2d3851a5bbdbe71e2" title="updateTactileNodes(node_id, 1 float, 2 doubles) updates the data for the TACTILE nodes that you creat...">updateTactileNodes</a>(buf,0,0,0);
<a name="l00115"></a>00115                                         <span class="keywordflow">break</span>;
<a name="l00116"></a>00116                                 <span class="keywordflow">case</span> 5:
<a name="l00117"></a>00117                                         <a class="code" href="client_8cpp.html#a5d8f1002952639c6e140599d96c6cb03">addNode</a>(buf,<span class="stringliteral">&quot;ROBOT&quot;</span>);
<a name="l00118"></a>00118                                         <a class="code" href="client_8cpp.html#aa43f89f2489afb160c61e0aae5780518" title="updateRobotNodes(node_id, 3 integers and 9 floats) updates the data for the ROBOT nodes that you crea...">updateRobotNodes</a>(buf,0,0,0,0,0,0,0,1,0,0,0,0);
<a name="l00119"></a>00119                                         <span class="keywordflow">break</span>;
<a name="l00120"></a>00120                                 <span class="keywordflow">case</span> 6:
<a name="l00121"></a>00121                                         <a class="code" href="client_8cpp.html#a5d8f1002952639c6e140599d96c6cb03">addNode</a>(buf,<span class="stringliteral">&quot;OBJECT&quot;</span>);
<a name="l00122"></a>00122                                         <a class="code" href="client_8cpp.html#af540238ffef4cb9d13381957d4e6545b" title="updateObjectNodes(node_id, 2 strings, 1 integer and 7 floats) updates the data for the OBJECT nodes t...">updateObjectNodes</a>(buf,<span class="stringliteral">&quot;127.0.0.1&quot;</span>,0,<span class="stringliteral">&quot;http://localhost&quot;</span>,0,0,0,0,1,0,0);
<a name="l00123"></a>00123                                         <span class="keywordflow">break</span>;
<a name="l00124"></a>00124                                 <span class="keywordflow">case</span> 7:
<a name="l00125"></a>00125                                         <a class="code" href="client_8cpp.html#a5d8f1002952639c6e140599d96c6cb03">addNode</a>(buf,<span class="stringliteral">&quot;AUDIO&quot;</span>);
<a name="l00126"></a>00126                                         <a class="code" href="client_8cpp.html#a09773e6b9675e966e270ef75445690df" title="updateAudioNodes(node_id, 3 strings and 1 integer) updates the data for the AUDIO nodes that you crea...">updateAudioNodes</a>(buf,<span class="stringliteral">&quot;127.0.0.1&quot;</span>,0,<span class="stringliteral">&quot;http://localhost&quot;</span>,<span class="stringliteral">&quot;config file&quot;</span>);
<a name="l00127"></a>00127                                         <span class="keywordflow">break</span>;
<a name="l00128"></a>00128                                 <span class="keywordflow">case</span> 8:
<a name="l00129"></a>00129                                         <a class="code" href="client_8cpp.html#a5d8f1002952639c6e140599d96c6cb03">addNode</a>(buf,<span class="stringliteral">&quot;POINTCLOUD&quot;</span>);
<a name="l00130"></a>00130                                         <a class="code" href="client_8cpp.html#a52be732c7b63e4e1f28ff7d996f22141" title="updatePointCloudNodes(node_id, 2 strings, 2 integers, 1 double and 1 boolean) updates the data for th...">updatePointCloudNodes</a>(buf,<span class="stringliteral">&quot;127.0.0.1&quot;</span>,0,<span class="stringliteral">&quot;http://localhost&quot;</span>,0,0,0);
<a name="l00131"></a>00131                                         <span class="keywordflow">break</span>;
<a name="l00132"></a>00132                                 }
<a name="l00133"></a>00133                         }
<a name="l00134"></a>00134                         <span class="keywordflow">if</span> (ch==<span class="charliteral">&#39;d&#39;</span> || ch==<span class="charliteral">&#39;D&#39;</span>)
<a name="l00135"></a>00135                         {
<a name="l00136"></a>00136                                 <a class="code" href="client_8cpp.html#a4daffd5dce4f1b7d588c096e8c5cd0e7" title="Deletes all 123 nodes for the specified RocketBox AVATAR id.">deleteRocketBoxAvatar</a>(<span class="stringliteral">&quot;avatar&quot;</span>);
<a name="l00137"></a>00137                         }
<a name="l00138"></a>00138                         <span class="keywordflow">if</span> (ch==<span class="charliteral">&#39;r&#39;</span> || ch==<span class="charliteral">&#39;R&#39;</span>)
<a name="l00139"></a>00139                         {
<a name="l00140"></a>00140                                 <span class="keyword">static</span> <span class="keywordtype">int</span> k = 0.f;
<a name="l00141"></a>00141                                 k = k + 0.01f;
<a name="l00142"></a>00142                                 <span class="comment">//updateRocketBoxAvatar(&quot;avatar&quot;,&quot;0&quot;,j,-1.18448e-015,-2.70976e-008,0,0.707106,-3.09086e-008,k);</span>
<a name="l00143"></a>00143                                 <a class="code" href="client_8cpp.html#aa7db119a47bec78a32f84652bb2412c2">updateRocketBoxAvatar</a>(<span class="stringliteral">&quot;avatar&quot;</span>,<span class="stringliteral">&quot;0&quot;</span>,j,-1.18448e-015,-2.70976e-008,0,0.707106,-3.09086e-008,k);
<a name="l00144"></a>00144                         }
<a name="l00145"></a>00145                         <span class="keywordflow">if</span> (ch==<span class="charliteral">&#39;a&#39;</span> || ch==<span class="charliteral">&#39;A&#39;</span>)
<a name="l00146"></a>00146                         {
<a name="l00147"></a>00147                                 <span class="keywordtype">char</span> connectedclients[1024];
<a name="l00148"></a>00148                                 <span class="keywordtype">char</span> *guid, *node, *tmpid, *nodeid;
<a name="l00149"></a>00149                                 <span class="keywordtype">char</span> allnodes[2048], <a class="code" href="structnode__info.html">node_info</a>[256];
<a name="l00150"></a>00150                                 <span class="keywordtype">int</span> loop = 0;
<a name="l00151"></a>00151                                 <span class="keywordtype">float</span> avdata[1024];
<a name="l00152"></a>00152                                 <span class="keywordtype">char</span> nodes[512];
<a name="l00153"></a>00153                                 <span class="keywordtype">float</span> data[7] = {0.f};
<a name="l00159"></a>00159                                 printf(<span class="stringliteral">&quot;number of connected clients %i\n&quot;</span>,<a class="code" href="client_8cpp.html#ae20598e6116c0ec6646fa9a0f886f027">getPeersID</a>(connectedclients));
<a name="l00160"></a>00160                                 <span class="comment">//printf(&quot;connected clients (getPeersID): %s\n&quot;,connectedclients);</span>
<a name="l00161"></a>00161                                 <span class="keywordflow">for</span> (guid = strtok (connectedclients, <span class="stringliteral">&quot;;&quot;</span>); guid != NULL;
<a name="l00162"></a>00162                                    guid = strtok (guid + strlen (guid) + 1, <span class="stringliteral">&quot;;&quot;</span>))
<a name="l00163"></a>00163                                 {
<a name="l00164"></a>00164                                         strncpy (iddata, guid, <span class="keyword">sizeof</span> (iddata));
<a name="l00165"></a>00165                                         printf (<span class="stringliteral">&quot;GUID: %s\n&quot;</span>, iddata);
<a name="l00169"></a>00169                                         printf(<span class="stringliteral">&quot;Number of nodes %i\n&quot;</span>,<a class="code" href="client_8cpp.html#af9b6a701fc265f98834b4d453718f831">getNodesInfo</a>(iddata,allnodes));
<a name="l00170"></a>00170                                         <span class="keywordflow">for</span> (node = strtok (allnodes, <span class="stringliteral">&quot;;&quot;</span>); node != NULL;
<a name="l00171"></a>00171                                            node = strtok (node + strlen (node) + 1, <span class="stringliteral">&quot;;&quot;</span>))
<a name="l00172"></a>00172                                         {
<a name="l00173"></a>00173                                                 strncpy (node_info, node, <span class="keyword">sizeof</span> (node_info));
<a name="l00174"></a>00174                                                 printf (<span class="stringliteral">&quot; Node: %s\n&quot;</span>, node_info);
<a name="l00175"></a>00175                                                 <span class="keywordflow">for</span> (tmpid = strtok (node_info, <span class="stringliteral">&quot;,&quot;</span>); tmpid != NULL;
<a name="l00176"></a>00176                                                    tmpid = strtok (tmpid + strlen (tmpid) + 1, <span class="stringliteral">&quot;,&quot;</span>))
<a name="l00177"></a>00177                                                 {
<a name="l00178"></a>00178                                                         <span class="keyword">static</span> <span class="keywordtype">char</span> avid[256];
<a name="l00179"></a>00179                                                         <span class="keywordflow">switch</span> (loop) 
<a name="l00180"></a>00180                                                         {
<a name="l00181"></a>00181                                                         <span class="keywordflow">case</span> 0:<span class="comment">// first token is the avatar id</span>
<a name="l00182"></a>00182                                                                 printf (<span class="stringliteral">&quot;  Avatar id: %s\n&quot;</span>, tmpid);
<a name="l00183"></a>00183                                                                 strncpy(avid,tmpid,<span class="keyword">sizeof</span>(avid));
<a name="l00184"></a>00184                                                                 <span class="keywordflow">break</span>;
<a name="l00185"></a>00185                                                         <span class="keywordflow">case</span> 2: <span class="comment">//third token is the TYPE</span>
<a name="l00186"></a>00186                                                                 <span class="keywordflow">if</span> (!strcmp(tmpid,<span class="stringliteral">&quot;AVATAR&quot;</span>)) <span class="comment">//only process if type is AVATAR</span>
<a name="l00187"></a>00187                                                                 {
<a name="l00188"></a>00188                                                                         <span class="keywordtype">int</span> c = 0;
<a name="l00191"></a>00191                                                                         <span class="keywordtype">int</span> count = <a class="code" href="client_8cpp.html#a08bdca402d4c72990f46c8e666e43f89">getAvatarData</a>(iddata,avid,nodes,avdata);
<a name="l00192"></a>00192                                                                         <span class="keywordflow">for</span> (nodeid = strtok (nodes, <span class="stringliteral">&quot;,&quot;</span>); nodeid != NULL;
<a name="l00193"></a>00193                                                                            nodeid = strtok (nodeid + strlen (nodeid) + 1, <span class="stringliteral">&quot;,&quot;</span>))
<a name="l00194"></a>00194                                                                         {
<a name="l00195"></a>00195                                                                                 printf(<span class="stringliteral">&quot;   %s - %.3f %.3f %.3f %.3f %.3f %.3f %.3f\n&quot;</span>,nodeid,
<a name="l00196"></a>00196                                                                                         avdata[0+(c*7)],avdata[1+(c*7)],avdata[2+(c*7)],avdata[3+(c*7)],
<a name="l00197"></a>00197                                                                                         avdata[4+(c*7)],avdata[5+(c*7)],avdata[6+(c*7)]);
<a name="l00198"></a>00198                                                                                 c++;
<a name="l00199"></a>00199                                                                         }
<a name="l00203"></a>00203                                                                         <span class="keywordflow">if</span> (<a class="code" href="client_8cpp.html#a142b482930bea3a0a563337dc68540b2">getAvatarSpecificData</a>(iddata,avid,<span class="stringliteral">&quot;0&quot;</span>,data))
<a name="l00204"></a>00204                                                                                 printf(<span class="stringliteral">&quot;   Local-coord data for 0: %.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f\n&quot;</span>,data[0],data[1],data[2],data[3],data[4],data[5],data[6]);
<a name="l00208"></a>00208                                                                         <span class="keywordflow">if</span> (<a class="code" href="client_8cpp.html#aa75716d1aa3eca8cc53312d98d32073b">getAvatarSpecificGlobalData</a>(iddata,avid,<span class="stringliteral">&quot;85&quot;</span>,data))
<a name="l00209"></a>00209                                                                                 printf(<span class="stringliteral">&quot;   World-coord data for 85: %.3f,%.3f,%.3f,%.3f,%.3f,%.3f,%.3f\n&quot;</span>,data[0],data[1],data[2],data[3],data[4],data[5],data[6]);
<a name="l00212"></a>00212                                                                         <a class="code" href="client_8cpp.html#ad7a848f23c79ed5b15b655fa06c9c105" title="gets the firstname and lastname for the specified avatar">getAvatarName</a>(iddata,avid,fname,lname);
<a name="l00213"></a>00213                                                                         printf(<span class="stringliteral">&quot;   Avatar Name: %s %s\n&quot;</span>,fname,lname);
<a name="l00214"></a>00214                                                                 } <span class="keywordflow">else</span> 
<a name="l00215"></a>00215                                                                         printf(<span class="stringliteral">&quot;   Not AVATAR\n&quot;</span>);
<a name="l00216"></a>00216                                                                 <span class="keywordflow">break</span>;
<a name="l00217"></a>00217                                                         }
<a name="l00218"></a>00218                                                         loop++;
<a name="l00219"></a>00219                                                 }
<a name="l00220"></a>00220                                                 loop=0;
<a name="l00221"></a>00221                                         }
<a name="l00222"></a>00222                                 }
<a name="l00223"></a>00223                         }
<a name="l00224"></a>00224                         <span class="keywordflow">if</span> (ch==<span class="charliteral">&#39;f&#39;</span> || ch==<span class="charliteral">&#39;F&#39;</span>)
<a name="l00225"></a>00225                         {
<a name="l00231"></a>00231                                 <span class="keywordtype">char</span> connectedclients[1024];
<a name="l00232"></a>00232                                 <span class="keywordtype">char</span> *guid, *node, *tmpid, *nodeid;
<a name="l00233"></a>00233                                 <span class="keywordtype">char</span> allnodes[2048], <a class="code" href="structnode__info.html">node_info</a>[256];
<a name="l00234"></a>00234                                 <span class="keywordtype">int</span> loop = 0;
<a name="l00235"></a>00235                                 <span class="keywordtype">char</span> nodes[512];
<a name="l00236"></a>00236                                 <span class="keywordtype">float</span> data[7] = {0.f};
<a name="l00237"></a>00237                                 printf(<span class="stringliteral">&quot;number of connected clients %i\n&quot;</span>,<a class="code" href="client_8cpp.html#ae20598e6116c0ec6646fa9a0f886f027">getPeersID</a>(connectedclients));
<a name="l00238"></a>00238                                 <span class="comment">//printf(&quot;connected clients (getPeersID): %s\n&quot;,connectedclients);</span>
<a name="l00239"></a>00239                                 <span class="keywordflow">for</span> (guid = strtok (connectedclients, <span class="stringliteral">&quot;;&quot;</span>); guid != NULL;
<a name="l00240"></a>00240                                    guid = strtok (guid + strlen (guid) + 1, <span class="stringliteral">&quot;;&quot;</span>))
<a name="l00241"></a>00241                                 {
<a name="l00242"></a>00242                                         strncpy (iddata, guid, <span class="keyword">sizeof</span> (iddata));
<a name="l00243"></a>00243                                         printf (<span class="stringliteral">&quot;GUID: %s\n&quot;</span>, iddata);
<a name="l00247"></a>00247                                         printf(<span class="stringliteral">&quot;Number of nodes %i\n&quot;</span>,<a class="code" href="client_8cpp.html#af9b6a701fc265f98834b4d453718f831">getNodesInfo</a>(iddata,allnodes));
<a name="l00248"></a>00248                                         <span class="keywordflow">for</span> (node = strtok (allnodes, <span class="stringliteral">&quot;;&quot;</span>); node != NULL;
<a name="l00249"></a>00249                                            node = strtok (node + strlen (node) + 1, <span class="stringliteral">&quot;;&quot;</span>))
<a name="l00250"></a>00250                                         {
<a name="l00251"></a>00251                                                 strncpy (node_info, node, <span class="keyword">sizeof</span> (node_info));
<a name="l00252"></a>00252                                                 printf (<span class="stringliteral">&quot; Node: %s\n&quot;</span>, node_info);
<a name="l00253"></a>00253                                                 <span class="keywordflow">for</span> (tmpid = strtok (node_info, <span class="stringliteral">&quot;,&quot;</span>); tmpid != NULL;
<a name="l00254"></a>00254                                                    tmpid = strtok (tmpid + strlen (tmpid) + 1, <span class="stringliteral">&quot;,&quot;</span>))
<a name="l00255"></a>00255                                                 {
<a name="l00256"></a>00256                                                         <span class="keyword">static</span> <span class="keywordtype">char</span> faceid[256];
<a name="l00257"></a>00257                                                         <span class="keywordflow">switch</span> (loop) 
<a name="l00258"></a>00258                                                         {
<a name="l00259"></a>00259                                                         <span class="keywordflow">case</span> 1:<span class="comment">// second token is the node_id </span>
<a name="l00260"></a>00260                                                                 printf (<span class="stringliteral">&quot;  Facial id: %s\n&quot;</span>, tmpid);
<a name="l00261"></a>00261                                                                 strncpy(faceid,tmpid,<span class="keyword">sizeof</span>(faceid));
<a name="l00262"></a>00262                                                                 <span class="keywordflow">break</span>;
<a name="l00263"></a>00263                                                         <span class="keywordflow">case</span> 2: <span class="comment">//third token is the TYPE</span>
<a name="l00264"></a>00264                                                                 <span class="keywordflow">if</span> (!strcmp(tmpid,<span class="stringliteral">&quot;FACIAL&quot;</span>)) <span class="comment">//only process if type is FACIAL</span>
<a name="l00265"></a>00265                                                                 {
<a name="l00266"></a>00266                                                                         <span class="keywordtype">int</span> c = 0;
<a name="l00269"></a>00269                                                                         <span class="keywordtype">bool</span> blink[10]; 
<a name="l00270"></a>00270                                                                         <span class="keywordtype">float</span> smile[10], frown[10], o[10], e[10], p[10];
<a name="l00271"></a>00271                                                                         <span class="keywordtype">int</span> count = <a class="code" href="client_8cpp.html#a0e2008ee14c15960cf34436dde0e587b" title="getFacialData(guid, node_id, bool, 5 floats) Gets the FACIAL data for the specified client/peer...">getFacialData</a>(iddata,nodes,blink,smile,frown,o,e,p);
<a name="l00272"></a>00272                                                                         <span class="keywordflow">for</span> (nodeid = strtok (nodes, <span class="stringliteral">&quot;,&quot;</span>); nodeid != NULL;
<a name="l00273"></a>00273                                                                            nodeid = strtok (nodeid + strlen (nodeid) + 1, <span class="stringliteral">&quot;,&quot;</span>))
<a name="l00274"></a>00274                                                                         {
<a name="l00275"></a>00275                                                                                 printf(<span class="stringliteral">&quot;   %s - %d,%.3f,%.3f,%.3f,%.3f,%.3f\n&quot;</span>,nodeid,blink[c],smile[c],frown[c],o[c],e[c],p[c]);
<a name="l00276"></a>00276                                                                                 c++;
<a name="l00277"></a>00277                                                                         }
<a name="l00281"></a>00281                                                                         <span class="keywordtype">bool</span> blink1=0; 
<a name="l00282"></a>00282                                                                         <span class="keywordtype">float</span> smile1=0.f, frown1=0.f, o1=0.f, e1=0.f, p1=0.f;
<a name="l00283"></a>00283                                                                         <span class="keywordflow">if</span> (<a class="code" href="client_8cpp.html#a08d06d96598de9fd6b42138236930650" title="Returns FACIAL data of specified nodes for the specified client peer.">getFacialSpecificData</a>(iddata,faceid,&amp;blink1,&amp;smile1,&amp;frown1,&amp;o1,&amp;e1,&amp;p1))
<a name="l00284"></a>00284                                                                                 printf(<span class="stringliteral">&quot;   Specific data for %s: %d,%.3f,%.3f,%.3f,%.3f,%.3f\n&quot;</span>,faceid,blink1,smile1,frown1,o1,e1,p1);
<a name="l00285"></a>00285                                                                 } <span class="keywordflow">else</span> 
<a name="l00286"></a>00286                                                                         printf(<span class="stringliteral">&quot;   Not FACIAL\n&quot;</span>);
<a name="l00287"></a>00287                                                                 <span class="keywordflow">break</span>;
<a name="l00288"></a>00288                                                         }
<a name="l00289"></a>00289                                                         loop++;
<a name="l00290"></a>00290                                                 }
<a name="l00291"></a>00291                                                 loop=0;
<a name="l00292"></a>00292                                         }
<a name="l00293"></a>00293                                 }
<a name="l00294"></a>00294                         }
<a name="l00295"></a>00295                 }
<a name="l00296"></a>00296         }
<a name="l00300"></a>00300         <a class="code" href="client_8cpp.html#a66a21a3ed677f69961d8280482c5285a" title="use removeAllNodes() and stop() on exit">removeAllNodes</a>();
<a name="l00301"></a>00301         <a class="code" href="client_8cpp.html#a8c528baf37154d347366083f0f816846" title="use removeAllNodes() and stop() on exit">stop</a>();
<a name="l00302"></a>00302 
<a name="l00303"></a>00303 }
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="sample_client_8cpp.html">sampleClient.cpp</a>      </li>

    <li class="footer">Generated on Thu May 31 2012 14:18:50 for Beaming Scene Service by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
