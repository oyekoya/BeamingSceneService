<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Beaming Scene Service: netClient/client.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  <td id="projectlogo"><img alt="Logo" src="BEAMING_LOGO2.jpg"/></td>
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Beaming Scene Service
   &#160;<span id="projectnumber">2.0</span>
   </div>
   <div id="projectbrief">RakNet wrapper for managing data communications between multiple Beaming clients</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('client_8h.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Defines</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">netClient/client.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;string&gt;</code><br/>
<code>#include &lt;sstream&gt;</code><br/>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="client_8h__dep__incl.png" border="0" usemap="#net_client_2client_8hdep" alt=""/></div>
<map name="net_client_2client_8hdep" id="net_client_2client_8hdep">
<area shape="rect" id="node3" href="client_8cpp.html" title="netClient/client.cpp" alt="" coords="5,80,139,107"/><area shape="rect" id="node5" href="php_client_8cpp.html" title="netClient/phpClient.cpp" alt="" coords="163,80,319,107"/><area shape="rect" id="node7" href="sample_client_8cpp.html" title="netClient/sampleClient.cpp" alt="" coords="343,80,520,107"/><area shape="rect" id="node9" href="echo_client_8cpp.html" title="xmppClient/echoClient.cpp" alt="" coords="545,80,721,107"/></map>
</div>
</div>
<p><a href="client_8h_source.html">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a></td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a493782fa0468226e195afc328221e1c8">BeamingDataType</a> { <br/>
&#160;&#160;<a class="el" href="client_8h.html#a493782fa0468226e195afc328221e1c8a2ca377302a6c9197300bb2223583ed3f">AVATAR</a>, 
<a class="el" href="client_8h.html#a493782fa0468226e195afc328221e1c8afd8f7c0209742426aaf9ab7a17b1a50d">FACIAL</a>, 
<a class="el" href="client_8h.html#a493782fa0468226e195afc328221e1c8a54d4a27e54eb1e49b0a92db604539946">EMOTION</a>, 
<a class="el" href="client_8h.html#a493782fa0468226e195afc328221e1c8a0e1e918a80f84992ae08463f076d5dc8">VIDEO</a>, 
<br/>
&#160;&#160;<a class="el" href="client_8h.html#a493782fa0468226e195afc328221e1c8a173913c4fca8bf1331575054152c4ebd">TACTILE</a>, 
<a class="el" href="client_8h.html#a493782fa0468226e195afc328221e1c8aabea9be20feeb2150a8ffbd68625beb4">ROBOT</a>, 
<a class="el" href="client_8h.html#a493782fa0468226e195afc328221e1c8a6f78e99ade8d62ec44d30013723e6e75">OBJECT</a>, 
<a class="el" href="client_8h.html#a493782fa0468226e195afc328221e1c8ad45d481f1c1a6029ce6a398e52e53bfd">AUDIO</a>, 
<br/>
&#160;&#160;<a class="el" href="client_8h.html#a493782fa0468226e195afc328221e1c8ab2e3d2c10bc4d3eef3a542bf6b01c0a2">POINTCLOUD</a>, 
<a class="el" href="client_8h.html#a493782fa0468226e195afc328221e1c8a9e022e6380da28dd73210ed34b137c36">GENERIC</a>
<br/>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a32381ff800acb733fc2af829c6148e26">startclient</a> (char *server_address, int server_port, char *client, char *clienttype, char *config, int viewer, int reliability=2, int priority=1, int interval_ms=30)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a2dd609be5d518e51092c185b77fefa90">check</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ad53bdc00b6536a8370c610dc9fd5f8ac">createNode</a> (char *id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#af252504739a7b4002b2d3b3116d49e5b">addRocketBoxAvatar</a> (char *avatar_id, char *avatar_cfg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#af47dca67db20b885f963b10267a4599a">deleteRocketBoxAvatar</a> (char *avatar_id)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes all 123 nodes for the specified RocketBox AVATAR id.  <a href="#af47dca67db20b885f963b10267a4599a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aff88ca52f3e6c16cbe073f33bc3585c0">addNode</a> (char *id, char node_type[])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#abf406abb6070b400830baa611555afea">addChildNode</a> (char *id, char *parent_id, char node_type[])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ad8b8121b4027a03d5c2a5dd0e40b2710">updateNodes</a> (char *id, float x, float y, float z, float rx, float ry, float rz, float w)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a65c402c4d43f98ee39e780f04c7bc8b4">updateRocketBoxAvatar</a> (char *avatar_id, char *node_id, float x, float y, float z, float rx, float ry, float rz, float w)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ab70cfdde0fc580ed0f4cbdd624b0af71">updateAvatarNodes</a> (char *id, float x, float y, float z, float rx, float ry, float rz, float w)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a5bbd6516e07df2960ff3e89b350e37ea">updateFacialNodes</a> (char *id, bool blink, float smile, float frown, float o, float e, float p)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">updateFacialNodes(node_id, bool, 5 floats) updates the data for the FACIAL nodes that you created.  <a href="#a5bbd6516e07df2960ff3e89b350e37ea"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a6fd495a10b15de6009d57e1ed54341f6">updateEmotionNodes</a> (char *id, double valence, double arousal, double misc)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">updateEmotionNodes(node_id, 3 doubles) updates the data for the EMOTION nodes that you created.  <a href="#a6fd495a10b15de6009d57e1ed54341f6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a40cc866a67dbba1a3daafcca4dd61455">updateTactileNodes</a> (char *id, double duration, float intensity, float temperature)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">updateTactileNodes(node_id, 1 float, 2 doubles) updates the data for the TACTILE nodes that you created.  <a href="#a40cc866a67dbba1a3daafcca4dd61455"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aebd3d274b7c46f7e7fbe60aab68ad1dd">updateRobotNodes</a> (char *id, int type, int details, float freespace, float x, float y, float z, float rx, float ry, float rz, float w, float time_remain, int contact_type)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">updateRobotNodes(node_id, 3 integers and 9 floats) updates the data for the ROBOT nodes that you created.  <a href="#aebd3d274b7c46f7e7fbe60aab68ad1dd"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a3d6a9d886d76289c49498e3c228f9e8d">updateAudioNodes</a> (char *id, char *host, int port, char *file_url, char *config)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">updateAudioNodes(node_id, 3 strings and 1 integer) updates the data for the AUDIO nodes that you created.  <a href="#a3d6a9d886d76289c49498e3c228f9e8d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a8b1ac10929093b4c0ba9d24725ab7bfd">updateVideoNodes</a> (char *id, char *host, int port, char *file_url, int frame_width, int frame_height, double bandwidth, float *camera_calibration1, float *camera_calibration2)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">updateVideoNodes(node_id, 2 strings, 3 integers and 1 double and 2 matrices) updates the data for the VIDEO nodes that you created. 3x3 camera_calibration1 matrix = float[9]. 4x4 camera_calibration2 matrix = float[16]  <a href="#a8b1ac10929093b4c0ba9d24725ab7bfd"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a052c905d3393c16aefb4c24199c70954">updateObjectNodes</a> (char *id, char *host, int port, char *file_url, float x, float y, float z, float rx, float ry, float rz, float w)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">updateObjectNodes(node_id, 2 strings, 1 integer and 7 floats) updates the data for the OBJECT nodes that you created.  <a href="#a052c905d3393c16aefb4c24199c70954"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a6c33c145212c408403f00b94f7827e3a">updatePointCloudNodes</a> (char *id, char *host, int port, char *file_url, int size, double bandwidth, bool RGB_flag, int quality)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">updatePointCloudNodes(node_id, 2 strings, 3 integers, 1 double and 1 boolean) updates the data for the POINTCLOUD nodes that you created.  <a href="#a6c33c145212c408403f00b94f7827e3a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ab8cd82ade232194b338f97f712295954">updateGenericNodes</a> (char *id, void *pdata, int psize)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">updateGenericNodes updates a shared generic data and its size  <a href="#ab8cd82ade232194b338f97f712295954"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a2b100eba4c0bf047609e00c0e264cf25">removeAllNodes</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">use <a class="el" href="client_8cpp.html#a66a21a3ed677f69961d8280482c5285a" title="use removeAllNodes() and stop() on exit">removeAllNodes()</a> and <a class="el" href="client_8cpp.html#a8c528baf37154d347366083f0f816846" title="use removeAllNodes() and stop() on exit">stop()</a> on exit  <a href="#a2b100eba4c0bf047609e00c0e264cf25"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#af65916f1932cc0aea16cbf19b98624fe">getPeersInfo</a> (char *peers_info)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#adc9fe27df05d9255c5d2d44714bddaea">getPeersID</a> (char *peers_info)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a4ca8b3287b62ce087bf9ccb79e576a19">getIPinfo</a> (char strid[], char *ipinfo)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the ip address and port of the specified GUID  <a href="#a4ca8b3287b62ce087bf9ccb79e576a19"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a7603466016a861384c4d34d84a1c6e13">getNodesInfo</a> (char peer_guid[], char *nodes_info)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a2109a573f49526b4c1da10bdd301437a">setAvatarName</a> (char *avatar_id, char *firstname, char *lastname)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the firstname and lastname for the avatar created with addRocketBoxAvatar  <a href="#a2109a573f49526b4c1da10bdd301437a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#acc1f40a4494f9cd82eb425bad2d53026">getAvatarName</a> (char strid[], char avatar_id[], char *firstname, char *lastname)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">gets the firstname and lastname for the specified avatar  <a href="#acc1f40a4494f9cd82eb425bad2d53026"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ac815bf5ce454ef0c8d32ea5de6fcf735">getAvatarData</a> (char strid[], char avatar_id[], char *node_ids, float *fa)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ac35133228bbd31054b6694ec8e05cea3">getFacialData</a> (char strid[], char *node_ids, bool *blink, float *smile, float *frown, float *o, float *e, float *p)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">getFacialData(guid, node_id, bool, 5 floats) Gets the FACIAL data for the specified client/peer.  <a href="#ac35133228bbd31054b6694ec8e05cea3"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a20b99139ca51b1186034a9aef721fde7">getEmotionData</a> (char strid[], char *node_ids, double *valence, double *arousal, double *misc)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">getEmotionData(guid, node_id, 3 doubles) Gets the EMOTION data for the specified client/peer.  <a href="#a20b99139ca51b1186034a9aef721fde7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a0a963762da0bae3e5fd5521a4fe23425">getTactileData</a> (char strid[], char *node_ids, double *duration, float *intensity, float *temperature)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">getTactileData(guid, node_id, 1 float, 2 doubles) Gets the TACTILE data for the specified client/peer.  <a href="#a0a963762da0bae3e5fd5521a4fe23425"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a1957cafff7d624b33f8db796b18d05c0">getRobotData</a> (char strid[], char *node_ids, int *type, int *details, float *freespace, float *x, float *y, float *z, float *rx, float *ry, float *rz, float *w, float *time_remain, int *contact_type)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">getRobotData(guid, node_id, 3 integers and 9 floats) Gets the ROBOT data for the specified client/peer.  <a href="#a1957cafff7d624b33f8db796b18d05c0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a32ad28a447b1d5bb67411b90058a8043">getAudioData</a> (char strid[], char *node_ids, char *host, int *port, char *file_url, char *config)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">getAudioData(guid, node_id, 3 strings and 1 integer) Gets the AUDIO data for the specified client/peer.  <a href="#a32ad28a447b1d5bb67411b90058a8043"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a9c2a4d095ded5a6181e5b92ea6552414">getVideoData</a> (char strid[], char *node_ids, char *host, int *port, char *file_url, int *frame_width, int *frame_height, double *bandwidth, float *camera_calibration1, float *camera_calibration2)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">getVideoData(guid, node_id, 2 strings, 3 integers 1 double and 2 matrices) Gets the VIDEO data for the specified client/peer.  <a href="#a9c2a4d095ded5a6181e5b92ea6552414"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#af6da80d8ac56527e14ceaa77635abfc7">getObjectData</a> (char strid[], char *node_ids, char *host, int *port, char *file_url, float *fa)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">getObjectData(guid, node_id, 2 strings, 1 integer and 7 floats) Gets the OBJECT data for the specified client/peer.  <a href="#af6da80d8ac56527e14ceaa77635abfc7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a9c07922939e9b4f816e273843803f96d">getPointCloudData</a> (char strid[], char *node_ids, char *host, int *port, char *file_url, int *size, double *bandwidth, bool *RGB_flag, int *quality)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">getPointCloudData(guid, node_id, 2 strings, 2 integers, 1 double and 1 boolean) Gets the POINTCLOUD data for the specified client/peer.  <a href="#a9c07922939e9b4f816e273843803f96d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#ad584eed3765e8a9029cce7efb6cb26a0">getGenericData</a> (char strid[], char generic_id[], void *pdata, int *psize)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">getGenericData returns a pointer to a shared generic data and its size  <a href="#ad584eed3765e8a9029cce7efb6cb26a0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a151dca9bc20d2134d865dc89778f4712">getAvatarSpecificData</a> (char strid[], char avatar_id[], char node_id[], float *fa)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a93922e418abef075d75bcd38d856b79b">getAvatarSpecificGlobalData</a> (char strid[], char avatar_id[], char node_id[], float *fa)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a4610c9ee5f45067a650835d1941b66d7">getFacialSpecificData</a> (char strid[], char node_id[], bool *blink, float *smile, float *frown, float *o, float *e, float *p)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns FACIAL data of specified nodes for the specified client peer.  <a href="#a4610c9ee5f45067a650835d1941b66d7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a9918936d9b829ab6a6c1a92cd37514be">getEmotionSpecificData</a> (char strid[], char node_id[], double *valence, double *arousal, double *misc)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns EMOTION data of specified nodes for the specified client peer.  <a href="#a9918936d9b829ab6a6c1a92cd37514be"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#af3b241625e525928f9da506b68ab67d1">getTactileSpecificData</a> (char strid[], char node_id[], double *duration, float *intensity, float *temperature)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns TACTILE data of specified nodes for the specified client peer.  <a href="#af3b241625e525928f9da506b68ab67d1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a1be75bb2d7d03f780be343f98adb8e65">getRobotSpecificData</a> (char strid[], char node_id[], int *type, int *details, float *freespace, float *fa, float *time_remain, int *contact_type)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns ROBOT data of specified nodes for the specified client peer.  <a href="#a1be75bb2d7d03f780be343f98adb8e65"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#adbfd3d5e2f77cc7f239d522f52767964">getAudioSpecificData</a> (char strid[], char node_id[], char *host, int *port, char *file_url, char *config)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns AUDIO data of specified nodes for the specified client peer.  <a href="#adbfd3d5e2f77cc7f239d522f52767964"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a39ce32bb72e9732b0006750cfe839ff1">getVideoSpecificData</a> (char strid[], char node_id[], char *host, int *port, char *file_url, int *frame_width, int *frame_height, double *bandwidth, float *camera_calibration1, float *camera_calibration2)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns VIDEO data of specified nodes for the specified client peer.  <a href="#a39ce32bb72e9732b0006750cfe839ff1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a6f1a65c18a7b6302cea71f4bfb8748b4">getObjectSpecificData</a> (char strid[], char node_id[], char *host, int *port, char *file_url, float *fa)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns OBJECT data of specified nodes for the specified client peer.  <a href="#a6f1a65c18a7b6302cea71f4bfb8748b4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#af2bd2f2b75820baea4ee49c1ead7dc72">getPointCloudSpecificData</a> (char strid[], char node_id[], char *host, int *port, char *file_url, int *size, double *bandwidth, bool *RGB_flag, int *quality)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns POINTCLOUD data of specified nodes for the specified client peer.  <a href="#af2bd2f2b75820baea4ee49c1ead7dc72"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a681124e319cf67394a5f25af882ce945">checkStatus</a> (char *idstr, char *mytype, char *name, char *myconfig)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a375366167b86a393a53a80421ca0c75d">fetch</a> (char strid[], float *fa)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a2d82918ae32cea633541764ab8b6f8a7">fetch2</a> (char strid[], char *fa)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#aa5f9f75b88a77e3b714709f2f6285100">stop</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">use <a class="el" href="client_8cpp.html#a66a21a3ed677f69961d8280482c5285a" title="use removeAllNodes() and stop() on exit">removeAllNodes()</a> and <a class="el" href="client_8cpp.html#a8c528baf37154d347366083f0f816846" title="use removeAllNodes() and stop() on exit">stop()</a> on exit  <a href="#aa5f9f75b88a77e3b714709f2f6285100"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="client_8h.html#a2e63fecd1f2d52c51374845963c55bf6">exitlibrary</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">use <a class="el" href="client_8cpp.html#ab6153b5cbd2d374f0bb7c23e85a5bcb9" title="use exitlibrary() on exit">exitlibrary()</a> on exit  <a href="#a2e63fecd1f2d52c51374845963c55bf6"></a><br/></td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="acfdc053623a87a1a1d4adf03e6b6678d"></a><!-- doxytag: member="client.h::CLIENT_LIB_EXPORT" ref="acfdc053623a87a1a1d4adf03e6b6678d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Definition at line <a class="el" href="client_8h_source.html#l00028">28</a> of file <a class="el" href="client_8h_source.html">client.h</a>.</p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="a493782fa0468226e195afc328221e1c8"></a><!-- doxytag: member="client.h::BeamingDataType" ref="a493782fa0468226e195afc328221e1c8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="client_8h.html#a493782fa0468226e195afc328221e1c8">BeamingDataType</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a493782fa0468226e195afc328221e1c8a2ca377302a6c9197300bb2223583ed3f"></a><!-- doxytag: member="AVATAR" ref="a493782fa0468226e195afc328221e1c8a2ca377302a6c9197300bb2223583ed3f" args="" -->AVATAR</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a493782fa0468226e195afc328221e1c8afd8f7c0209742426aaf9ab7a17b1a50d"></a><!-- doxytag: member="FACIAL" ref="a493782fa0468226e195afc328221e1c8afd8f7c0209742426aaf9ab7a17b1a50d" args="" -->FACIAL</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a493782fa0468226e195afc328221e1c8a54d4a27e54eb1e49b0a92db604539946"></a><!-- doxytag: member="EMOTION" ref="a493782fa0468226e195afc328221e1c8a54d4a27e54eb1e49b0a92db604539946" args="" -->EMOTION</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a493782fa0468226e195afc328221e1c8a0e1e918a80f84992ae08463f076d5dc8"></a><!-- doxytag: member="VIDEO" ref="a493782fa0468226e195afc328221e1c8a0e1e918a80f84992ae08463f076d5dc8" args="" -->VIDEO</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a493782fa0468226e195afc328221e1c8a173913c4fca8bf1331575054152c4ebd"></a><!-- doxytag: member="TACTILE" ref="a493782fa0468226e195afc328221e1c8a173913c4fca8bf1331575054152c4ebd" args="" -->TACTILE</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a493782fa0468226e195afc328221e1c8aabea9be20feeb2150a8ffbd68625beb4"></a><!-- doxytag: member="ROBOT" ref="a493782fa0468226e195afc328221e1c8aabea9be20feeb2150a8ffbd68625beb4" args="" -->ROBOT</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a493782fa0468226e195afc328221e1c8a6f78e99ade8d62ec44d30013723e6e75"></a><!-- doxytag: member="OBJECT" ref="a493782fa0468226e195afc328221e1c8a6f78e99ade8d62ec44d30013723e6e75" args="" -->OBJECT</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a493782fa0468226e195afc328221e1c8ad45d481f1c1a6029ce6a398e52e53bfd"></a><!-- doxytag: member="AUDIO" ref="a493782fa0468226e195afc328221e1c8ad45d481f1c1a6029ce6a398e52e53bfd" args="" -->AUDIO</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a493782fa0468226e195afc328221e1c8ab2e3d2c10bc4d3eef3a542bf6b01c0a2"></a><!-- doxytag: member="POINTCLOUD" ref="a493782fa0468226e195afc328221e1c8ab2e3d2c10bc4d3eef3a542bf6b01c0a2" args="" -->POINTCLOUD</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a493782fa0468226e195afc328221e1c8a9e022e6380da28dd73210ed34b137c36"></a><!-- doxytag: member="GENERIC" ref="a493782fa0468226e195afc328221e1c8a9e022e6380da28dd73210ed34b137c36" args="" -->GENERIC</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="client_8h_source.html#l00031">31</a> of file <a class="el" href="client_8h_source.html">client.h</a>.</p>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="abf406abb6070b400830baa611555afea"></a><!-- doxytag: member="client.h::addChildNode" ref="abf406abb6070b400830baa611555afea" args="(char *id, char *parent_id, char node_type[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void <a class="el" href="client_8h.html#abf406abb6070b400830baa611555afea">addChildNode</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>parent_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>node_type</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Adds a Node and also sets the parents addNode("LeftEye","Head","AVATAR") adds a left eye node of type AVATAR and attaches it to the head (parent) </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00398">398</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aff88ca52f3e6c16cbe073f33bc3585c0"></a><!-- doxytag: member="client.h::addNode" ref="aff88ca52f3e6c16cbe073f33bc3585c0" args="(char *id, char node_type[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void <a class="el" href="client_8h.html#aff88ca52f3e6c16cbe073f33bc3585c0">addNode</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>node_type</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Adds a Node addNode("Head","AVATAR") adds a left eye node of type AVATAR </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000002">Deprecated:</a></b></dt><dd>Use addRocketBoxAvatar(char *id); </dd></dl>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00304">304</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af252504739a7b4002b2d3b3116d49e5b"></a><!-- doxytag: member="client.h::addRocketBoxAvatar" ref="af252504739a7b4002b2d3b3116d49e5b" args="(char *avatar_id, char *avatar_cfg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#af252504739a7b4002b2d3b3116d49e5b">addRocketBoxAvatar</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>avatar_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>avatar_cfg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Adds a RocketBox AVATAR skeleton (default node ids of 0 to 122 and a Rocketbox cfg file) addRocketBoxAvatar adds 123 AVATAR nodes/joints using the RocketBox hierarchy </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00162">162</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2dd609be5d518e51092c185b77fefa90"></a><!-- doxytag: member="client.h::check" ref="a2dd609be5d518e51092c185b77fefa90" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void <a class="el" href="client_8h.html#a2dd609be5d518e51092c185b77fefa90">check</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Put <a class="el" href="client_8cpp.html#a83f8adca24e250bfb5c9a90a35503ae9">check()</a> function in a continuous loop somewhere in your code (OnTimer or OnFrame loop). The server regularly pings all clients to ensure they are still live. check also checks for new connections to the server and receives incoming packets. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00111">111</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a681124e319cf67394a5f25af882ce945"></a><!-- doxytag: member="client.h::checkStatus" ref="a681124e319cf67394a5f25af882ce945" args="(char *idstr, char *mytype, char *name, char *myconfig)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a681124e319cf67394a5f25af882ce945">checkStatus</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>idstr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>mytype</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>myconfig</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>checkStatus and fetch works together checkStatus checks if there's a new client and returns the details of the new clients the first parameter is the id of the new client which you should store in your code NOTE: this functions informs you of new clients which is then deleted from buffer once accessed, hence housekeeping is required </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000004">Deprecated:</a></b></dt><dd>Use getPeersInfo(...) or getPeersID(...) </dd></dl>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01665">1665</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad53bdc00b6536a8370c610dc9fd5f8ac"></a><!-- doxytag: member="client.h::createNode" ref="ad53bdc00b6536a8370c610dc9fd5f8ac" args="(char *id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void <a class="el" href="client_8h.html#ad53bdc00b6536a8370c610dc9fd5f8ac">createNode</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>createNode for each data you want to send e.g. for an avatar, you would create node for:</p>
<ul>
<li>createNode("Head"); //create raknet node/object for head position/orientation <dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000001">Deprecated:</a></b></dt><dd>Use addRocketBoxAvatar(char *id); </dd></dl>
</li>
</ul>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00151">151</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af47dca67db20b885f963b10267a4599a"></a><!-- doxytag: member="client.h::deleteRocketBoxAvatar" ref="af47dca67db20b885f963b10267a4599a" args="(char *avatar_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#af47dca67db20b885f963b10267a4599a">deleteRocketBoxAvatar</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>avatar_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Deletes all 123 nodes for the specified RocketBox AVATAR id. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00413">413</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2e63fecd1f2d52c51374845963c55bf6"></a><!-- doxytag: member="client.h::exitlibrary" ref="a2e63fecd1f2d52c51374845963c55bf6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void <a class="el" href="client_8h.html#a2e63fecd1f2d52c51374845963c55bf6">exitlibrary</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>use <a class="el" href="client_8cpp.html#ab6153b5cbd2d374f0bb7c23e85a5bcb9" title="use exitlibrary() on exit">exitlibrary()</a> on exit </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01804">1804</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a375366167b86a393a53a80421ca0c75d"></a><!-- doxytag: member="client.h::fetch" ref="a375366167b86a393a53a80421ca0c75d" args="(char strid[], float *fa)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a375366167b86a393a53a80421ca0c75d">fetch</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>fa</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Fetches the node-ids, current position and orientation data for all connected clients Assumes node-id is a number </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000005">Deprecated:</a></b></dt><dd>Use the appropriate getNodesData functions (depending on the data types being sent e.g. getAvatarData, getAvatarSpecificData, getEmotionData, getEmotionSpecificData, etc.) </dd></dl>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01687">1687</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2d82918ae32cea633541764ab8b6f8a7"></a><!-- doxytag: member="client.h::fetch2" ref="a2d82918ae32cea633541764ab8b6f8a7" args="(char strid[], char *fa)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a2d82918ae32cea633541764ab8b6f8a7">fetch2</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>fa</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Fetches the node-ids, current position and orientation data for all connected clients Assumes node-id is a number </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000006">Deprecated:</a></b></dt><dd>Use the appropriate getNodesData functions (depending on the data types being sent e.g. getAvatarData, getAvatarSpecificData, getEmotionData, getEmotionSpecificData, etc.) </dd></dl>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01737">1737</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a32ad28a447b1d5bb67411b90058a8043"></a><!-- doxytag: member="client.h::getAudioData" ref="a32ad28a447b1d5bb67411b90058a8043" args="(char strid[], char *node_ids, char *host, int *port, char *file_url, char *config)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a32ad28a447b1d5bb67411b90058a8043">getAudioData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>node_ids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>file_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>getAudioData(guid, node_id, 3 strings and 1 integer) Gets the AUDIO data for the specified client/peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01097">1097</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="adbfd3d5e2f77cc7f239d522f52767964"></a><!-- doxytag: member="client.h::getAudioSpecificData" ref="adbfd3d5e2f77cc7f239d522f52767964" args="(char strid[], char node_id[], char *host, int *port, char *file_url, char *config)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool <a class="el" href="client_8h.html#adbfd3d5e2f77cc7f239d522f52767964">getAudioSpecificData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>node_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>file_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns AUDIO data of specified nodes for the specified client peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01493">1493</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac815bf5ce454ef0c8d32ea5de6fcf735"></a><!-- doxytag: member="client.h::getAvatarData" ref="ac815bf5ce454ef0c8d32ea5de6fcf735" args="(char strid[], char avatar_id[], char *node_ids, float *fa)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#ac815bf5ce454ef0c8d32ea5de6fcf735">getAvatarData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>avatar_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>node_ids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>fa</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>getAvatarData(guid, avatar_id, node_id, 7 floats) Gets AVATAR data for the specified avatar added by client/peer (strid). Similar to deprecated fetch function but it also gets the node-ids separately as string instead String node_ids contain the following info: {AVATARJOINTID1,AVATARJOINTID2,AVATARJOINTID3,...} Float fa returns data for 123 nodes (i.e. 123*7 floats) Call getPeersID to get guid and getNodesInfo to get avatar_id i.e. nodename </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00911">911</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="acc1f40a4494f9cd82eb425bad2d53026"></a><!-- doxytag: member="client.h::getAvatarName" ref="acc1f40a4494f9cd82eb425bad2d53026" args="(char strid[], char avatar_id[], char *firstname, char *lastname)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void <a class="el" href="client_8h.html#acc1f40a4494f9cd82eb425bad2d53026">getAvatarName</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>avatar_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>firstname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>lastname</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>gets the firstname and lastname for the specified avatar </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00881">881</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a151dca9bc20d2134d865dc89778f4712"></a><!-- doxytag: member="client.h::getAvatarSpecificData" ref="a151dca9bc20d2134d865dc89778f4712" args="(char strid[], char avatar_id[], char node_id[], float *fa)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool <a class="el" href="client_8h.html#a151dca9bc20d2134d865dc89778f4712">getAvatarSpecificData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>avatar_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>node_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>fa</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Returns AVATAR data of specified joint/node for the specified avatar added by client peer (strid) Call getPeersID to get guid and getNodesInfo to get avatar_id i.e. nodename </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01267">1267</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a93922e418abef075d75bcd38d856b79b"></a><!-- doxytag: member="client.h::getAvatarSpecificGlobalData" ref="a93922e418abef075d75bcd38d856b79b" args="(char strid[], char avatar_id[], char node_id[], float *fa)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool <a class="el" href="client_8h.html#a93922e418abef075d75bcd38d856b79b">getAvatarSpecificGlobalData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>avatar_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>node_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>fa</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Returns AVATAR data of specified joint/node for the specified avatar added by client peer (strid) in WORLD CO-ORDINATES Call getPeersID to get guid and getNodesInfo to get avatar_id i.e. nodename </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01301">1301</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a20b99139ca51b1186034a9aef721fde7"></a><!-- doxytag: member="client.h::getEmotionData" ref="a20b99139ca51b1186034a9aef721fde7" args="(char strid[], char *node_ids, double *valence, double *arousal, double *misc)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a20b99139ca51b1186034a9aef721fde7">getEmotionData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>node_ids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>valence</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>arousal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>misc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>getEmotionData(guid, node_id, 3 doubles) Gets the EMOTION data for the specified client/peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00988">988</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9918936d9b829ab6a6c1a92cd37514be"></a><!-- doxytag: member="client.h::getEmotionSpecificData" ref="a9918936d9b829ab6a6c1a92cd37514be" args="(char strid[], char node_id[], double *valence, double *arousal, double *misc)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool <a class="el" href="client_8h.html#a9918936d9b829ab6a6c1a92cd37514be">getEmotionSpecificData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>node_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>valence</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>arousal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>misc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns EMOTION data of specified nodes for the specified client peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01396">1396</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac35133228bbd31054b6694ec8e05cea3"></a><!-- doxytag: member="client.h::getFacialData" ref="ac35133228bbd31054b6694ec8e05cea3" args="(char strid[], char *node_ids, bool *blink, float *smile, float *frown, float *o, float *e, float *p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#ac35133228bbd31054b6694ec8e05cea3">getFacialData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>node_ids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>blink</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>smile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>frown</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>o</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>e</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>p</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>getFacialData(guid, node_id, bool, 5 floats) Gets the FACIAL data for the specified client/peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00952">952</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4610c9ee5f45067a650835d1941b66d7"></a><!-- doxytag: member="client.h::getFacialSpecificData" ref="a4610c9ee5f45067a650835d1941b66d7" args="(char strid[], char node_id[], bool *blink, float *smile, float *frown, float *o, float *e, float *p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool <a class="el" href="client_8h.html#a4610c9ee5f45067a650835d1941b66d7">getFacialSpecificData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>node_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>blink</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>smile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>frown</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>o</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>e</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>p</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns FACIAL data of specified nodes for the specified client peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01363">1363</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad584eed3765e8a9029cce7efb6cb26a0"></a><!-- doxytag: member="client.h::getGenericData" ref="ad584eed3765e8a9029cce7efb6cb26a0" args="(char strid[], char generic_id[], void *pdata, int *psize)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool <a class="el" href="client_8h.html#ad584eed3765e8a9029cce7efb6cb26a0">getGenericData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>generic_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>psize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>getGenericData returns a pointer to a shared generic data and its size </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01629">1629</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4ca8b3287b62ce087bf9ccb79e576a19"></a><!-- doxytag: member="client.h::getIPinfo" ref="a4ca8b3287b62ce087bf9ccb79e576a19" args="(char strid[], char *ipinfo)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void <a class="el" href="client_8h.html#a4ca8b3287b62ce087bf9ccb79e576a19">getIPinfo</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>ipinfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>returns the ip address and port of the specified GUID </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00800">800</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7603466016a861384c4d34d84a1c6e13"></a><!-- doxytag: member="client.h::getNodesInfo" ref="a7603466016a861384c4d34d84a1c6e13" args="(char peer_guid[], char *nodes_info)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a7603466016a861384c4d34d84a1c6e13">getNodesInfo</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>peer_guid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>nodes_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>returns the number of nodes that was created by the specified guid: {NODENAME1,NODEID1,NODETYPE1,NODECFG1;NODENAME2,NODEID2,NODETYPE2,NODECFG2;...} e.g {"avatar","0","AVATAR";"clientname","object1","OBJECT";...} where TYPES: enum BeamingDataTypes NOTE: In the case of AVATAR data type, NODENAME - "avatar" is the avatar_id that was defined in addRocketBoxAvatar while NODEID is always "0" (root) For all other data types, NODENAME - clientname is defined by clients in startclient </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00852">852</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af6da80d8ac56527e14ceaa77635abfc7"></a><!-- doxytag: member="client.h::getObjectData" ref="af6da80d8ac56527e14ceaa77635abfc7" args="(char strid[], char *node_ids, char *host, int *port, char *file_url, float *fa)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#af6da80d8ac56527e14ceaa77635abfc7">getObjectData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>node_ids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>file_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>fa</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>getObjectData(guid, node_id, 2 strings, 1 integer and 7 floats) Gets the OBJECT data for the specified client/peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01181">1181</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6f1a65c18a7b6302cea71f4bfb8748b4"></a><!-- doxytag: member="client.h::getObjectSpecificData" ref="a6f1a65c18a7b6302cea71f4bfb8748b4" args="(char strid[], char node_id[], char *host, int *port, char *file_url, float *fa)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool <a class="el" href="client_8h.html#a6f1a65c18a7b6302cea71f4bfb8748b4">getObjectSpecificData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>node_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>file_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>fa</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns OBJECT data of specified nodes for the specified client peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01559">1559</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="adc9fe27df05d9255c5d2d44714bddaea"></a><!-- doxytag: member="client.h::getPeersID" ref="adc9fe27df05d9255c5d2d44714bddaea" args="(char *peers_info)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#adc9fe27df05d9255c5d2d44714bddaea">getPeersID</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>peers_info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>returns how many peers are actually connected with just the ID info: {GUID1;GUID2;...} e.g {"0"; "1";"2";...} </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00835">835</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af65916f1932cc0aea16cbf19b98624fe"></a><!-- doxytag: member="client.h::getPeersInfo" ref="af65916f1932cc0aea16cbf19b98624fe" args="(char *peers_info)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#af65916f1932cc0aea16cbf19b98624fe">getPeersInfo</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>peers_info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>returns how many peers are actually connected and the following infos: {GUID1,,CLIENTNAME1CLIENTTYPE1,CLIENTCONFIG1;GUID2,CLIENTNAME2,CLIENTTYPE2,CLIENTCONFIG2;...} e.g {"0","Luigi","VISITOR","m01.cfg";"1","Paolo","VISITOR","m02.cfg";"2","Eduardo","SPECTATOR","m03.cfg";} where TYPES: enum BeamingDataTypes. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00783">783</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9c07922939e9b4f816e273843803f96d"></a><!-- doxytag: member="client.h::getPointCloudData" ref="a9c07922939e9b4f816e273843803f96d" args="(char strid[], char *node_ids, char *host, int *port, char *file_url, int *size, double *bandwidth, bool *RGB_flag, int *quality)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a9c07922939e9b4f816e273843803f96d">getPointCloudData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>node_ids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>file_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>bandwidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>RGB_flag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>quality</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>getPointCloudData(guid, node_id, 2 strings, 2 integers, 1 double and 1 boolean) Gets the POINTCLOUD data for the specified client/peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01226">1226</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af2bd2f2b75820baea4ee49c1ead7dc72"></a><!-- doxytag: member="client.h::getPointCloudSpecificData" ref="af2bd2f2b75820baea4ee49c1ead7dc72" args="(char strid[], char node_id[], char *host, int *port, char *file_url, int *size, double *bandwidth, bool *RGB_flag, int *quality)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool <a class="el" href="client_8h.html#af2bd2f2b75820baea4ee49c1ead7dc72">getPointCloudSpecificData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>node_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>file_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>bandwidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>RGB_flag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>quality</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns POINTCLOUD data of specified nodes for the specified client peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01595">1595</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1957cafff7d624b33f8db796b18d05c0"></a><!-- doxytag: member="client.h::getRobotData" ref="a1957cafff7d624b33f8db796b18d05c0" args="(char strid[], char *node_ids, int *type, int *details, float *freespace, float *x, float *y, float *z, float *rx, float *ry, float *rz, float *w, float *time_remain, int *contact_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a1957cafff7d624b33f8db796b18d05c0">getRobotData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>node_ids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>details</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>freespace</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>rx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>ry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>rz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>time_remain</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>contact_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>getRobotData(guid, node_id, 3 integers and 9 floats) Gets the ROBOT data for the specified client/peer. </p>

</div>
</div>
<a class="anchor" id="a1be75bb2d7d03f780be343f98adb8e65"></a><!-- doxytag: member="client.h::getRobotSpecificData" ref="a1be75bb2d7d03f780be343f98adb8e65" args="(char strid[], char node_id[], int *type, int *details, float *freespace, float *fa, float *time_remain, int *contact_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool <a class="el" href="client_8h.html#a1be75bb2d7d03f780be343f98adb8e65">getRobotSpecificData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>node_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>details</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>freespace</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>fa</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>time_remain</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>contact_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns ROBOT data of specified nodes for the specified client peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01453">1453</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a0a963762da0bae3e5fd5521a4fe23425"></a><!-- doxytag: member="client.h::getTactileData" ref="a0a963762da0bae3e5fd5521a4fe23425" args="(char strid[], char *node_ids, double *duration, float *intensity, float *temperature)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a0a963762da0bae3e5fd5521a4fe23425">getTactileData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>node_ids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>duration</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>intensity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>temperature</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>getTactileData(guid, node_id, 1 float, 2 doubles) Gets the TACTILE data for the specified client/peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01021">1021</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af3b241625e525928f9da506b68ab67d1"></a><!-- doxytag: member="client.h::getTactileSpecificData" ref="af3b241625e525928f9da506b68ab67d1" args="(char strid[], char node_id[], double *duration, float *intensity, float *temperature)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool <a class="el" href="client_8h.html#af3b241625e525928f9da506b68ab67d1">getTactileSpecificData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>node_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>duration</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>intensity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>temperature</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns TACTILE data of specified nodes for the specified client peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01424">1424</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9c2a4d095ded5a6181e5b92ea6552414"></a><!-- doxytag: member="client.h::getVideoData" ref="a9c2a4d095ded5a6181e5b92ea6552414" args="(char strid[], char *node_ids, char *host, int *port, char *file_url, int *frame_width, int *frame_height, double *bandwidth, float *camera_calibration1, float *camera_calibration2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a9c2a4d095ded5a6181e5b92ea6552414">getVideoData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>node_ids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>file_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>frame_width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>frame_height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>bandwidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>camera_calibration1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>camera_calibration2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>getVideoData(guid, node_id, 2 strings, 3 integers 1 double and 2 matrices) Gets the VIDEO data for the specified client/peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01137">1137</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a39ce32bb72e9732b0006750cfe839ff1"></a><!-- doxytag: member="client.h::getVideoSpecificData" ref="a39ce32bb72e9732b0006750cfe839ff1" args="(char strid[], char node_id[], char *host, int *port, char *file_url, int *frame_width, int *frame_height, double *bandwidth, float *camera_calibration1, float *camera_calibration2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> bool <a class="el" href="client_8h.html#a39ce32bb72e9732b0006750cfe839ff1">getVideoSpecificData</a> </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>strid</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>node_id</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>file_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>frame_width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>frame_height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>bandwidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>camera_calibration1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>camera_calibration2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns VIDEO data of specified nodes for the specified client peer. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01523">1523</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2b100eba4c0bf047609e00c0e264cf25"></a><!-- doxytag: member="client.h::removeAllNodes" ref="a2b100eba4c0bf047609e00c0e264cf25" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void <a class="el" href="client_8h.html#a2b100eba4c0bf047609e00c0e264cf25">removeAllNodes</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>use <a class="el" href="client_8cpp.html#a66a21a3ed677f69961d8280482c5285a" title="use removeAllNodes() and stop() on exit">removeAllNodes()</a> and <a class="el" href="client_8cpp.html#a8c528baf37154d347366083f0f816846" title="use removeAllNodes() and stop() on exit">stop()</a> on exit </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01772">1772</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2109a573f49526b4c1da10bdd301437a"></a><!-- doxytag: member="client.h::setAvatarName" ref="a2109a573f49526b4c1da10bdd301437a" args="(char *avatar_id, char *firstname, char *lastname)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a2109a573f49526b4c1da10bdd301437a">setAvatarName</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>avatar_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>firstname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>lastname</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>sets the firstname and lastname for the avatar created with addRocketBoxAvatar </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00437">437</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a32381ff800acb733fc2af829c6148e26"></a><!-- doxytag: member="client.h::startclient" ref="a32381ff800acb733fc2af829c6148e26" args="(char *server_address, int server_port, char *client, char *clienttype, char *config, int viewer, int reliability=2, int priority=1, int interval_ms=30)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a32381ff800acb733fc2af829c6148e26">startclient</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>server_address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>server_port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>client</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>clienttype</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>config</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>viewer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>reliability</em> = <code>2</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>priority</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>interval_ms</em> = <code>30</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Call the start function to initialise a client connection</p>
<ul>
<li>server_address is the ip address of the machine running the RakNet Server</li>
<li>server_port is the port the server is using for contacting clients</li>
<li>client is the client name (any name)</li>
<li>client type is the type of client connecting (e.g. VISITOR, PROXY, LOCAL, SPECTATOR, ROBOT, HAPTIC_DEVICE, etc)</li>
<li>config can also be any string</li>
<li>0 is default. Specify viewer=1(true) if your client is connecting as viewer only (i.e.you want to see what's happening but be invisble to others)</li>
<li>packet reliability =<ul>
<li>0 = UNRELIABLE, Unreliable packets are sent by straight UDP. They may arrive out of order, or not at all. This is best for data that is unimportant, or data that you send very frequently so even if some packets are missed newer packets will compensate. Advantages - These packets don't need to be acknowledged by the network, saving the size of a UDP header in acknowledgment (about 50 bytes or so). The savings can really add up. Disadvantages - No packet ordering, packets may never arrive, these packets are the first to get dropped if the send buffer is full.</li>
<li>1 = UNRELIABLE_SEQUENCED, Unreliable sequenced packets are the same as unreliable packets, except that only the newest packet is ever accepted. Older packets are ignored. Advantages - Same low overhead as unreliable packets, and you don't have to worry about older packets changing your data to old values. Disadvantages - A LOT of packets will be dropped since they may never arrive because of UDP and may be dropped even when they do arrive. These packets are the first to get dropped if the send buffer is full. The last packet sent may never arrive, which can be a problem if you stop sending packets at some particular point.</li>
<li>2 = RELIABLE, Reliable packets are UDP packets monitored by a reliablilty layer to ensure they arrive at the destination. Advantages - You know the packet will get there. Eventually... Disadvantages - Retransmissions and acknowledgments can add significant bandwidth requirements. Packets may arrive very late if the network is busy. No packet ordering.</li>
<li>3 = RELIABLE_ORDERED, Reliable ordered packets are UDP packets monitored by a reliability layer to ensure they arrive at the destination and are ordered at the destination. Advantages - The packet will get there and in the order it was sent. These are by far the easiest to program for because you don't have to worry about strange behavior due to out of order or lost packets. Disadvantages - Retransmissions and acknowledgments can add significant bandwidth requirements. Packets may arrive very late if the network is busy. One late packet can delay many packets that arrived sooner, resulting in significant lag spikes. However, this disadvantage can be mitigated by the clever use of ordering streams .</li>
<li>4 = RELIABLE_SEQUENCED Reliable sequenced packets are UDP packets monitored by a reliability layer to ensure they arrive at the destination and are sequenced at the destination. Advantages - You get the reliability of UDP packets, the ordering of ordered packets, yet don't have to wait for old packets. More packets will arrive with this method than with the unreliable sequenced method, and they will be distributed more evenly. The most important advantage however is that the latest packet sent will arrive, where with unreliable sequenced the latest packet sent may not arrive. Disadvantages - Wasteful of bandwidth because it uses the overhead of reliable UDP packets to ensure late packets arrive that just get ignored anyway.</li>
<li>5 = UNRELIABLE_WITH_ACK_RECEIPT,</li>
<li>6 = UNRELIABLE_SEQUENCED_WITH_ACK_RECEIPT,</li>
<li>7 = RELIABLE_WITH_ACK_RECEIPT,</li>
<li>8 = RELIABLE_ORDERED_WITH_ACK_RECEIPT,</li>
<li>9 = RELIABLE_SEQUENCED_WITH_ACK_RECEIPT, Acknowledgment recipts (*_WITH_ACK_RECEIPT) By specifying one of the PacketReliability types that contain _WITH_ACK_RECEIPT, you can request that RakPeerInterface notify you when a message has been acknowledged by the remote system, or delivery has timed out.</li>
</ul>
</li>
<li>packet priority =<ul>
<li>0 = IMMEDIATE_PRIORITY, The highest possible priority. These message trigger sends immediately, and are generally not buffered or aggregated into a single datagram. Messages at HIGH_PRIORITY priority and lower are buffered to be sent in groups at 10 millisecond intervals</li>
<li>1 = HIGH_PRIORITY, For every 2 IMMEDIATE_PRIORITY messages, 1 HIGH_PRIORITY will be sent.</li>
<li>2 = MEDIUM_PRIORITY, For every 2 HIGH_PRIORITY messages, 1 MEDIUM_PRIORITY will be sent.</li>
<li>3 = LOW_PRIORITY, For every 2 MEDIUM_PRIORITY messages, 1 LOW_PRIORITY will be sent.</li>
</ul>
</li>
<li>interval_ms<ul>
<li>How frequently to autoserialize all objects. This controls the maximum number of game object updates per second. If you want to control the update interval with more granularity, use the return values from Replica3::Serialize(). </li>
</ul>
</li>
</ul>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00051">51</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa5f9f75b88a77e3b714709f2f6285100"></a><!-- doxytag: member="client.h::stop" ref="aa5f9f75b88a77e3b714709f2f6285100" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> void <a class="el" href="client_8h.html#aa5f9f75b88a77e3b714709f2f6285100">stop</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>use <a class="el" href="client_8cpp.html#a66a21a3ed677f69961d8280482c5285a" title="use removeAllNodes() and stop() on exit">removeAllNodes()</a> and <a class="el" href="client_8cpp.html#a8c528baf37154d347366083f0f816846" title="use removeAllNodes() and stop() on exit">stop()</a> on exit </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l01792">1792</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3d6a9d886d76289c49498e3c228f9e8d"></a><!-- doxytag: member="client.h::updateAudioNodes" ref="a3d6a9d886d76289c49498e3c228f9e8d" args="(char *id, char *host, int port, char *file_url, char *config)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a3d6a9d886d76289c49498e3c228f9e8d">updateAudioNodes</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>file_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>updateAudioNodes(node_id, 3 strings and 1 integer) updates the data for the AUDIO nodes that you created. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00661">661</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab70cfdde0fc580ed0f4cbdd624b0af71"></a><!-- doxytag: member="client.h::updateAvatarNodes" ref="ab70cfdde0fc580ed0f4cbdd624b0af71" args="(char *id, float x, float y, float z, float rx, float ry, float rz, float w)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#ab70cfdde0fc580ed0f4cbdd624b0af71">updateAvatarNodes</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>rx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>ry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>rz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>w</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>updateAvatarNodes(node_id, 7 floats) updates the data for the AVATAR nodes that you created. updateAvatarNodes expects three XYZ postions and four XYZW quaternion orientations as floats. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00484">484</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6fd495a10b15de6009d57e1ed54341f6"></a><!-- doxytag: member="client.h::updateEmotionNodes" ref="a6fd495a10b15de6009d57e1ed54341f6" args="(char *id, double valence, double arousal, double misc)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a6fd495a10b15de6009d57e1ed54341f6">updateEmotionNodes</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>valence</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>arousal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>misc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>updateEmotionNodes(node_id, 3 doubles) updates the data for the EMOTION nodes that you created. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00576">576</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5bbd6516e07df2960ff3e89b350e37ea"></a><!-- doxytag: member="client.h::updateFacialNodes" ref="a5bbd6516e07df2960ff3e89b350e37ea" args="(char *id, bool blink, float smile, float frown, float o, float e, float p)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a5bbd6516e07df2960ff3e89b350e37ea">updateFacialNodes</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blink</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>smile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>frown</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>o</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>e</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>p</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>updateFacialNodes(node_id, bool, 5 floats) updates the data for the FACIAL nodes that you created. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00547">547</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab8cd82ade232194b338f97f712295954"></a><!-- doxytag: member="client.h::updateGenericNodes" ref="ab8cd82ade232194b338f97f712295954" args="(char *id, void *pdata, int psize)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#ab8cd82ade232194b338f97f712295954">updateGenericNodes</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pdata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>psize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>updateGenericNodes updates a shared generic data and its size </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00515">515</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad8b8121b4027a03d5c2a5dd0e40b2710"></a><!-- doxytag: member="client.h::updateNodes" ref="ad8b8121b4027a03d5c2a5dd0e40b2710" args="(char *id, float x, float y, float z, float rx, float ry, float rz, float w)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#ad8b8121b4027a03d5c2a5dd0e40b2710">updateNodes</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>rx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>ry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>rz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>w</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Simply calls updateAvatarNodes updateNodes(node_id, 7 floats) updates the data for the AVATAR nodes that you created. updateNodes expects three XYZ postions and four XYZW quaternion orientations as floats. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.html#_deprecated000003">Deprecated:</a></b></dt><dd>Use appropriate function for corresponding data type e.g. updateAvatarNodes, updateFacialNodes, updateEmotionNodes, etc. </dd></dl>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00460">460</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a052c905d3393c16aefb4c24199c70954"></a><!-- doxytag: member="client.h::updateObjectNodes" ref="a052c905d3393c16aefb4c24199c70954" args="(char *id, char *host, int port, char *file_url, float x, float y, float z, float rx, float ry, float rz, float w)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a052c905d3393c16aefb4c24199c70954">updateObjectNodes</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>file_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>rx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>ry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>rz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>w</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>updateObjectNodes(node_id, 2 strings, 1 integer and 7 floats) updates the data for the OBJECT nodes that you created. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00721">721</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6c33c145212c408403f00b94f7827e3a"></a><!-- doxytag: member="client.h::updatePointCloudNodes" ref="a6c33c145212c408403f00b94f7827e3a" args="(char *id, char *host, int port, char *file_url, int size, double bandwidth, bool RGB_flag, int quality)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a6c33c145212c408403f00b94f7827e3a">updatePointCloudNodes</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>file_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>bandwidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>RGB_flag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>quality</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>updatePointCloudNodes(node_id, 2 strings, 3 integers, 1 double and 1 boolean) updates the data for the POINTCLOUD nodes that you created. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00754">754</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aebd3d274b7c46f7e7fbe60aab68ad1dd"></a><!-- doxytag: member="client.h::updateRobotNodes" ref="aebd3d274b7c46f7e7fbe60aab68ad1dd" args="(char *id, int type, int details, float freespace, float x, float y, float z, float rx, float ry, float rz, float w, float time_remain, int contact_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#aebd3d274b7c46f7e7fbe60aab68ad1dd">updateRobotNodes</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>details</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>freespace</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>rx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>ry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>rz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>time_remain</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>contact_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>updateRobotNodes(node_id, 3 integers and 9 floats) updates the data for the ROBOT nodes that you created. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00626">626</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a65c402c4d43f98ee39e780f04c7bc8b4"></a><!-- doxytag: member="client.h::updateRocketBoxAvatar" ref="a65c402c4d43f98ee39e780f04c7bc8b4" args="(char *avatar_id, char *node_id, float x, float y, float z, float rx, float ry, float rz, float w)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a65c402c4d43f98ee39e780f04c7bc8b4">updateRocketBoxAvatar</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>avatar_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>node_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>rx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>ry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>rz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>w</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>updateRocketBoxAvatar(avatar_id, node_id, 7 floats) updates the data for the Rocketbox AVATAR nodes that you created. updateRocketBoxAvatar expects three XYZ postions and four XYZW quaternion orientations as floats. you should specify the avatar_id you added and respective node_id, which can be from 0 to 123. see sample avatar config file. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00472">472</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a40cc866a67dbba1a3daafcca4dd61455"></a><!-- doxytag: member="client.h::updateTactileNodes" ref="a40cc866a67dbba1a3daafcca4dd61455" args="(char *id, double duration, float intensity, float temperature)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a40cc866a67dbba1a3daafcca4dd61455">updateTactileNodes</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>duration</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>intensity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>temperature</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>updateTactileNodes(node_id, 1 float, 2 doubles) updates the data for the TACTILE nodes that you created. </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00601">601</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8b1ac10929093b4c0ba9d24725ab7bfd"></a><!-- doxytag: member="client.h::updateVideoNodes" ref="a8b1ac10929093b4c0ba9d24725ab7bfd" args="(char *id, char *host, int port, char *file_url, int frame_width, int frame_height, double bandwidth, float *camera_calibration1, float *camera_calibration2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="client_8h.html#acfdc053623a87a1a1d4adf03e6b6678d">CLIENT_LIB_EXPORT</a> int <a class="el" href="client_8h.html#a8b1ac10929093b4c0ba9d24725ab7bfd">updateVideoNodes</a> </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>host</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>file_url</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>frame_width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>frame_height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>bandwidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>camera_calibration1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>camera_calibration2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>updateVideoNodes(node_id, 2 strings, 3 integers and 1 double and 2 matrices) updates the data for the VIDEO nodes that you created. 3x3 camera_calibration1 matrix = float[9]. 4x4 camera_calibration2 matrix = float[16] </p>

<p>Definition at line <a class="el" href="client_8cpp_source.html#l00687">687</a> of file <a class="el" href="client_8cpp_source.html">client.cpp</a>.</p>

</div>
</div>
</div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="client_8h.html">client.h</a>      </li>

    <li class="footer">Generated on Thu Feb 7 2013 15:21:31 for Beaming Scene Service by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
