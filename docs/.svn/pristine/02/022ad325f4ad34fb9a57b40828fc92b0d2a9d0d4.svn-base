<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Beaming Scene Service: netServer/server.cpp Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  <td id="projectlogo"><img alt="Logo" src="BEAMING_LOGO2.jpg"/></td>
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Beaming Scene Service
   &#160;<span id="projectnumber">2.0</span>
   </div>
   <div id="projectbrief">RakNet wrapper for managing data communications between multiple Beaming clients</div>
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('server_8cpp.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">netServer/server.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="server_8cpp.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//Server Application - Raknet link and logfile recording</span>
<a name="l00002"></a>00002 
<a name="l00003"></a>00003 <span class="preprocessor">#include &quot;<a class="code" href="_client_server_8h.html">ClientServer.h</a>&quot;</span>
<a name="l00004"></a>00004 <span class="preprocessor">#ifdef WIN32</span>
<a name="l00005"></a>00005 <span class="preprocessor"></span><span class="preprocessor">#include &lt;windows.h&gt;</span>
<a name="l00006"></a>00006 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00007"></a>00007 <span class="preprocessor">#include &lt;tchar.h&gt;</span>
<a name="l00008"></a>00008 <span class="preprocessor">#endif</span>
<a name="l00009"></a>00009 <span class="preprocessor"></span>
<a name="l00010"></a><a class="code" href="server_8cpp.html#a0ddf1224851353fc92bfbff6f499fa97">00010</a> <span class="keywordtype">int</span> <a class="code" href="php_client_8cpp.html#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span> *argv[])
<a name="l00011"></a>00011 {
<a name="l00012"></a>00012         <span class="keywordtype">char</span> <a class="code" href="client_8cpp.html#af53f92900705f7de3c139a05b2f9ef16">ch</a>;
<a name="l00013"></a>00013         SocketDescriptor <a class="code" href="client_8cpp.html#ad11eee3825edfb880822f4de9c729463">sd</a>;
<a name="l00014"></a>00014         <span class="comment">//char ip[128];</span>
<a name="l00015"></a>00015         <span class="keyword">static</span> <span class="keywordtype">int</span> SERVER_PORT=12050;
<a name="l00016"></a>00016 
<a name="l00017"></a>00017         <span class="comment">// ReplicaManager3 requires NetworkIDManager to lookup pointers from numbers.</span>
<a name="l00018"></a>00018         NetworkIDManager <a class="code" href="client_8cpp.html#a1c6407685a5f44a533e8e7cd529583b3" title="ReplicaManager3 requires NetworkIDManager to lookup pointers from numbers.">networkIdManager</a>;
<a name="l00019"></a>00019         <span class="comment">// Each application has one instance of RakPeerInterface</span>
<a name="l00020"></a>00020         RakPeerInterface *<a class="code" href="client_8cpp.html#afc90d01dfaaa56f2484c5746a05c37b8" title="Each application has one instance of RakPeerInterface.">rakPeer</a>;
<a name="l00021"></a>00021         <span class="comment">// The system that performs most of our functionality for this server</span>
<a name="l00022"></a>00022         <a class="code" href="class_replica_manager3_beaming.html" title="Created on intialisation and attached as a plugin.">ReplicaManager3Beaming</a> <a class="code" href="client_8cpp.html#a3a150d368e1880d8c7d012ba8299eeaa" title="The system that performs most of our functionality for this client.">replicaManager</a>;
<a name="l00023"></a>00023 
<a name="l00024"></a>00024         printf(<span class="stringliteral">&quot;NetServer handles objects creation and destruction and automatic serialization of data members.\n&quot;</span>);
<a name="l00025"></a>00025         ch=<span class="charliteral">&#39;s&#39;</span>; 
<a name="l00026"></a>00026 
<a name="l00027"></a>00027         rakPeer = RakNetworkFactory::GetRakPeerInterface();
<a name="l00028"></a>00028         <a class="code" href="_client_server_8h.html#ad9b4d2b6bfe35238ad017f255ce6d0a1">topology</a>=<a class="code" href="_client_server_8h.html#a06fc87d81c62e9abb8790b6e5713c55ba67c96b24b23bcb408bae7626730a04b7">SERVER</a>;
<a name="l00029"></a>00029         <span class="keywordflow">if</span> (argc &gt; 1)
<a name="l00030"></a>00030                 SERVER_PORT = atoi(argv[1]);
<a name="l00031"></a>00031         <span class="keywordflow">else</span>
<a name="l00032"></a>00032                 printf(<span class="stringliteral">&quot;To specify an alternative port (default=12050), run: server port_no\n&quot;</span>);
<a name="l00033"></a>00033         sd.port=SERVER_PORT;
<a name="l00034"></a>00034         printf(<span class="stringliteral">&quot;press key &#39;l&#39; - Starts logging.\n&quot;</span>);
<a name="l00035"></a>00035 
<a name="l00036"></a>00036         <span class="comment">// ObjectMemberRPC, AutoRPC for objects, and ReplicaManager3 require that you call SetNetworkIDManager()</span>
<a name="l00037"></a>00037         rakPeer-&gt;SetNetworkIDManager(&amp;networkIdManager);
<a name="l00038"></a>00038         <span class="comment">// The network ID authority is the system that creates the common numerical identifier used to lookup pointers.</span>
<a name="l00039"></a>00039         <span class="comment">// For client/server this is the server</span>
<a name="l00040"></a>00040         <span class="comment">// For peer to peer this would be true on every system, and NETWORK_ID_SUPPORTS_PEER_TO_PEER should be defined in RakNetDefines.h</span>
<a name="l00041"></a>00041         networkIdManager.SetIsNetworkIDAuthority(<span class="keyword">true</span>);
<a name="l00042"></a>00042         <span class="comment">// Start RakNet, up to 32 connections if the server</span>
<a name="l00043"></a>00043         rakPeer-&gt;Startup(32,10,&amp;sd,1);
<a name="l00044"></a>00044         rakPeer-&gt;AttachPlugin(&amp;replicaManager);
<a name="l00045"></a>00045         rakPeer-&gt;SetMaximumIncomingConnections(32);
<a name="l00046"></a>00046 
<a name="l00047"></a>00047         printf(<span class="stringliteral">&quot;Started server on port %i\n&quot;</span>, SERVER_PORT);
<a name="l00048"></a>00048         printf(<span class="stringliteral">&quot;Server GUID is %s \n&quot;</span>,rakPeer-&gt;GetGuidFromSystemAddress(UNASSIGNED_SYSTEM_ADDRESS).ToString());
<a name="l00049"></a>00049 
<a name="l00050"></a>00050                 <span class="comment">//printf(&quot;\n&quot;);</span>
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="preprocessor">#ifdef WIN32    </span>
<a name="l00053"></a>00053 <span class="preprocessor"></span>        STARTUPINFO si;                                 <span class="comment">//startup handle for audio process</span>
<a name="l00054"></a>00054         PROCESS_INFORMATION pi;                 <span class="comment">//process handle for audio process</span>
<a name="l00055"></a>00055 <span class="preprocessor">#endif</span>
<a name="l00056"></a>00056 <span class="preprocessor"></span>
<a name="l00057"></a>00057         <span class="comment">// Enter infinite loop to run the system</span>
<a name="l00058"></a>00058         Packet *<a class="code" href="client_8cpp.html#a5fab032fae4f2b00b3edac2656900211">packet</a>;
<a name="l00059"></a>00059         <span class="keywordtype">bool</span> quit=<span class="keyword">false</span>;
<a name="l00060"></a>00060         <span class="comment">//std::map&lt;std::string, std::vector&lt;node_info*&gt; &gt;::iterator it;</span>
<a name="l00061"></a>00061         <span class="keywordflow">while</span> (!quit)
<a name="l00062"></a>00062         {
<a name="l00063"></a>00063                 <span class="keywordflow">for</span> (packet = rakPeer-&gt;Receive(); <a class="code" href="client_8cpp.html#a5fab032fae4f2b00b3edac2656900211">packet</a>; rakPeer-&gt;DeallocatePacket(packet), packet = rakPeer-&gt;Receive())
<a name="l00064"></a>00064                 {
<a name="l00065"></a>00065                         <span class="keywordflow">switch</span> (packet-&gt;data[0])
<a name="l00066"></a>00066                         {
<a name="l00067"></a>00067                         <span class="keywordflow">case</span> ID_CONNECTION_ATTEMPT_FAILED:
<a name="l00068"></a>00068                                 printf(<span class="stringliteral">&quot;ID_CONNECTION_ATTEMPT_FAILED\n&quot;</span>);
<a name="l00069"></a>00069                                 quit=<span class="keyword">true</span>;
<a name="l00070"></a>00070                                 <span class="keywordflow">break</span>;
<a name="l00071"></a>00071                         <span class="keywordflow">case</span> ID_NO_FREE_INCOMING_CONNECTIONS:
<a name="l00072"></a>00072                                 printf(<span class="stringliteral">&quot;ID_NO_FREE_INCOMING_CONNECTIONS\n&quot;</span>);
<a name="l00073"></a>00073                                 quit=<span class="keyword">true</span>;
<a name="l00074"></a>00074                                 <span class="keywordflow">break</span>;
<a name="l00075"></a>00075                         <span class="keywordflow">case</span> ID_CONNECTION_REQUEST_ACCEPTED:
<a name="l00076"></a>00076                                 printf(<span class="stringliteral">&quot;ID_CONNECTION_REQUEST_ACCEPTED\n&quot;</span>);
<a name="l00077"></a>00077                                 <span class="keywordflow">break</span>;
<a name="l00078"></a>00078                         <span class="keywordflow">case</span> ID_NEW_INCOMING_CONNECTION:
<a name="l00079"></a>00079                                 printf(<span class="stringliteral">&quot;ID_NEW_INCOMING_CONNECTION from %s, guid %s\n&quot;</span>, packet-&gt;systemAddress.ToString(),packet-&gt;guid.ToString());
<a name="l00080"></a>00080                                 <span class="comment">/*it = nodes_map.find(packet-&gt;guid.ToString());</span>
<a name="l00081"></a>00081 <span class="comment">                                if (it != nodes_map.end()) //if id exists in node database, clear out</span>
<a name="l00082"></a>00082 <span class="comment">                                        nodes_map[packet-&gt;guid.ToString()].clear();</span>
<a name="l00083"></a>00083 <span class="comment">                                //avatar_joint_replicas.clear();*/</span>
<a name="l00084"></a>00084                                 <span class="keywordflow">break</span>;
<a name="l00085"></a>00085                         <span class="keywordflow">case</span> ID_DISCONNECTION_NOTIFICATION:
<a name="l00086"></a>00086                                 printf(<span class="stringliteral">&quot;ID_DISCONNECTION_NOTIFICATION\n&quot;</span>);
<a name="l00087"></a>00087                                 <span class="keywordflow">break</span>;
<a name="l00088"></a>00088                         <span class="keywordflow">case</span> ID_CONNECTION_LOST:
<a name="l00089"></a>00089                                 printf(<span class="stringliteral">&quot;ID_CONNECTION_LOST\n&quot;</span>);
<a name="l00090"></a>00090                                 <span class="keywordflow">break</span>;
<a name="l00091"></a>00091                         }
<a name="l00092"></a>00092                 }
<a name="l00093"></a>00093 
<a name="l00094"></a>00094                 <span class="keywordflow">if</span> (kbhit())
<a name="l00095"></a>00095                 {
<a name="l00096"></a>00096                         ch=getch();
<a name="l00097"></a>00097                         <span class="keywordflow">if</span> (ch==<span class="charliteral">&#39;q&#39;</span> || ch==<span class="charliteral">&#39;Q&#39;</span>)
<a name="l00098"></a>00098                         {
<a name="l00099"></a>00099                                 printf(<span class="stringliteral">&quot;Quitting.\n&quot;</span>);
<a name="l00100"></a>00100                                 quit=<span class="keyword">true</span>;
<a name="l00101"></a>00101                         }
<a name="l00102"></a>00102                         <span class="comment">//for debugging</span>
<a name="l00103"></a>00103                         <span class="keywordflow">if</span> (ch==<span class="charliteral">&#39;n&#39;</span> || ch==<span class="charliteral">&#39;N&#39;</span>)
<a name="l00104"></a>00104                         {
<a name="l00105"></a>00105                                 <span class="keywordflow">for</span> ( std::map&lt;std::string, std::vector&lt;node_info*&gt; &gt;::iterator cIter = <a class="code" href="_client_server_8h.html#aee6ed86d42821e392e49ae3ecb3f04b6">nodes_map</a>.begin(); cIter!=<a class="code" href="_client_server_8h.html#aee6ed86d42821e392e49ae3ecb3f04b6">nodes_map</a>.end(); cIter++ )
<a name="l00106"></a>00106                                         printf(<span class="stringliteral">&quot;%d, &quot;</span>,cIter-&gt;second.size());
<a name="l00107"></a>00107                                 printf(<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00108"></a>00108                         }
<a name="l00109"></a>00109                         <span class="keywordflow">if</span> (ch==<span class="charliteral">&#39;l&#39;</span> || ch==<span class="charliteral">&#39;L&#39;</span>)
<a name="l00110"></a>00110                         {
<a name="l00111"></a>00111 <span class="preprocessor">                        #ifdef WIN32    </span>
<a name="l00112"></a>00112 <span class="preprocessor"></span>                                <a class="code" href="_client_server_8h.html#af7883388f6a285534cba3f39404124d4">logging</a>=!<a class="code" href="_client_server_8h.html#af7883388f6a285534cba3f39404124d4">logging</a>;
<a name="l00113"></a>00113                                 <span class="keywordflow">if</span> (<a class="code" href="_client_server_8h.html#af7883388f6a285534cba3f39404124d4">logging</a>==<span class="keyword">true</span>)
<a name="l00114"></a>00114                                 {
<a name="l00115"></a>00115                                         printf(<span class="stringliteral">&quot;Logging Enabled.\n&quot;</span>);
<a name="l00116"></a>00116                                         
<a name="l00117"></a>00117                                         <span class="keywordtype">int</span> logstartTime = (int) RakNet::GetTime();             <span class="comment">//get time for log name</span>
<a name="l00118"></a>00118                                                                                 
<a name="l00119"></a>00119                                         <span class="keywordtype">char</span> commandline[256];                                                  <span class="comment">//set command line for audio record</span>
<a name="l00120"></a>00120                                         sprintf(commandline, <span class="stringliteral">&quot;Harddisk.exe -preset beaming.hdp -filter beaming.hfs -output BeamingLog_%i.ogg -minimize -record&quot;</span>,logstartTime);
<a name="l00121"></a>00121                                         
<a name="l00122"></a>00122                                         ZeroMemory( &amp;si, <span class="keyword">sizeof</span>(si) );          <span class="comment">//prepare for audio recording process</span>
<a name="l00123"></a>00123                                         si.cb = <span class="keyword">sizeof</span>(si);                                     <span class="comment">//..</span>
<a name="l00124"></a>00124                                         ZeroMemory( &amp;pi, <span class="keyword">sizeof</span>(pi) );          <span class="comment">//..</span>
<a name="l00125"></a>00125 
<a name="l00126"></a>00126                                         <span class="keywordflow">if</span>( !CreateProcess( NULL,               <span class="comment">// No module name (use command line)</span>
<a name="l00127"></a>00127                                                 commandline,                                    <span class="comment">// Command line for audio client exe</span>
<a name="l00128"></a>00128                                                 NULL,                                           <span class="comment">// Process handle not inheritable</span>
<a name="l00129"></a>00129                                                 NULL,                                           <span class="comment">// Thread handle not inheritable</span>
<a name="l00130"></a>00130                                                 FALSE,                                          <span class="comment">// Set handle inheritance to FALSE</span>
<a name="l00131"></a>00131                                                 0,                                              <span class="comment">// No creation flags</span>
<a name="l00132"></a>00132                                                 NULL,                                           <span class="comment">// Use parent&#39;s environment block</span>
<a name="l00133"></a>00133                                                 NULL,                                           <span class="comment">// Use parent&#39;s starting directory </span>
<a name="l00134"></a>00134                                                 &amp;si,                                            <span class="comment">// Pointer to STARTUPINFO structure</span>
<a name="l00135"></a>00135                                                 &amp;pi )                                           <span class="comment">// Pointer to PROCESS_INFORMATION structure</span>
<a name="l00136"></a>00136                                                 ) 
<a name="l00137"></a>00137                                         {                                                                       <span class="comment">//warn on fail</span>
<a name="l00138"></a>00138                                                 printf(<span class="stringliteral">&quot;Create Audio Process failed (%d).\n&quot;</span>, GetLastError() ); 
<a name="l00139"></a>00139                                         }
<a name="l00140"></a>00140                                         
<a name="l00141"></a>00141                                         rakPeer-&gt;AttachPlugin(&amp;<a class="code" href="_client_server_8h.html#a87a1f273fa8ad585520f9a5e5d071ec4">logfileHandler</a>);
<a name="l00142"></a>00142                                         <a class="code" href="_client_server_8h.html#a87a1f273fa8ad585520f9a5e5d071ec4">logfileHandler</a>.StartLog(<span class="stringliteral">&quot;BeamingLog&quot;</span>, logstartTime); <span class="comment">//to test -  standard output should be automatically written</span>
<a name="l00143"></a>00143                                         <span class="keywordtype">char</span> starttime[128];
<a name="l00144"></a>00144                                         <span class="keywordtype">char</span> startstr[128];
<a name="l00145"></a>00145                                         <a class="code" href="_client_server_8h.html#a87a1f273fa8ad585520f9a5e5d071ec4">logfileHandler</a>.GetLocalTime(starttime);
<a name="l00146"></a>00146                                         sprintf(startstr,<span class="stringliteral">&quot;S;%s&quot;</span>,starttime);
<a name="l00147"></a>00147                                         <a class="code" href="_client_server_8h.html#a87a1f273fa8ad585520f9a5e5d071ec4">logfileHandler</a>.WriteLog(startstr);
<a name="l00148"></a>00148                                         <span class="comment">//logfileHandler.WriteLog(&quot;Wole is testing&quot;); //writes additional lines</span>
<a name="l00149"></a>00149                                         <span class="comment">//logfileHandler.WriteMiscellaneous(&quot;audiotime&quot;,&quot;234678&quot;); //should enable writing additional information - not on the same line?</span>
<a name="l00150"></a>00150         
<a name="l00151"></a>00151                                         <span class="keywordtype">char</span> localtime[128];
<a name="l00152"></a>00152                                         <span class="keywordtype">char</span> logstr[1024];
<a name="l00153"></a>00153                                         <a class="code" href="_client_server_8h.html#a87a1f273fa8ad585520f9a5e5d071ec4">logfileHandler</a>.GetLocalTime(localtime);
<a name="l00154"></a>00154                                         RakNetTimeMS time = RakNet::GetTime();
<a name="l00155"></a>00155                                         <span class="comment">//NOTE: This is out of date and doesn&#39;t work anymore. Need to update, as it only logged avatars. </span>
<a name="l00156"></a>00156                                         <span class="keywordflow">for</span> ( std::map&lt;RakNetGUID, std::vector&lt;BeamingAvatarJointReplica*&gt; &gt;::iterator cIter = <a class="code" href="_client_server_8h.html#a045310ed105e329426e31b89e065b05c">avatar_joint_replicas</a>.begin(); cIter!=<a class="code" href="_client_server_8h.html#a045310ed105e329426e31b89e065b05c">avatar_joint_replicas</a>.end(); cIter++ )
<a name="l00157"></a>00157                                         {
<a name="l00158"></a>00158                                                 <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i&lt;=cIter-&gt;second.size();i++)
<a name="l00159"></a>00159                                                 {
<a name="l00160"></a>00160                                                         sprintf(logstr,<span class="stringliteral">&quot;C;%&quot;</span>PRINTF_64_BIT_MODIFIER<span class="stringliteral">&quot;u;%s;%s;%i;%i&quot;</span>,(<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span>)time,localtime,cIter-&gt;first.ToString(),i,<a class="code" href="_client_server_8h.html#a045310ed105e329426e31b89e065b05c">avatar_joint_replicas</a>.size());
<a name="l00161"></a>00161                                                         <a class="code" href="_client_server_8h.html#a87a1f273fa8ad585520f9a5e5d071ec4">logfileHandler</a>.WriteLog(logstr);
<a name="l00162"></a>00162                                                 }
<a name="l00163"></a>00163                                         }
<a name="l00164"></a>00164                                 }
<a name="l00165"></a>00165                                 <span class="keywordflow">else</span>
<a name="l00166"></a>00166                                 {
<a name="l00167"></a>00167                                         rakPeer-&gt;DetachPlugin(&amp;<a class="code" href="_client_server_8h.html#a87a1f273fa8ad585520f9a5e5d071ec4">logfileHandler</a>);
<a name="l00168"></a>00168                                         printf(<span class="stringliteral">&quot;Logging Disabled.\n&quot;</span>);
<a name="l00169"></a>00169                                         DWORD exitCode=0;                                                               <span class="comment">//kill the audio recording process</span>
<a name="l00170"></a>00170                                         GetExitCodeProcess(pi.hProcess, &amp;exitCode);             <span class="comment">//..</span>
<a name="l00171"></a>00171                                         TerminateProcess(pi.hProcess, exitCode);                <span class="comment">//..</span>
<a name="l00172"></a>00172                                         CloseHandle(pi.hProcess);                                               <span class="comment">//..</span>
<a name="l00173"></a>00173                                         <span class="keywordtype">char</span> endtime[128];
<a name="l00174"></a>00174                                         <span class="keywordtype">char</span> endstr[128];
<a name="l00175"></a>00175                                         <a class="code" href="_client_server_8h.html#a87a1f273fa8ad585520f9a5e5d071ec4">logfileHandler</a>.GetLocalTime(endtime);
<a name="l00176"></a>00176                                         sprintf(endstr,<span class="stringliteral">&quot;E;%s&quot;</span>,endtime);
<a name="l00177"></a>00177                                         <a class="code" href="_client_server_8h.html#a87a1f273fa8ad585520f9a5e5d071ec4">logfileHandler</a>.WriteLog(endstr);
<a name="l00178"></a>00178                                 }
<a name="l00179"></a>00179 <span class="preprocessor">                        #endif</span>
<a name="l00180"></a>00180 <span class="preprocessor"></span>                        }
<a name="l00181"></a>00181                 }
<a name="l00182"></a>00182 
<a name="l00183"></a>00183                 RakSleep(1);
<a name="l00184"></a>00184         }
<a name="l00185"></a>00185 
<a name="l00186"></a>00186 <span class="preprocessor">        #ifdef WIN32    </span>
<a name="l00187"></a>00187 <span class="preprocessor"></span>        <span class="keywordflow">if</span> (<a class="code" href="_client_server_8h.html#af7883388f6a285534cba3f39404124d4">logging</a>==<span class="keyword">true</span>)
<a name="l00188"></a>00188         {
<a name="l00189"></a>00189                 rakPeer-&gt;DetachPlugin(&amp;<a class="code" href="_client_server_8h.html#a87a1f273fa8ad585520f9a5e5d071ec4">logfileHandler</a>);
<a name="l00190"></a>00190                 printf(<span class="stringliteral">&quot;Logging Disabled.\n&quot;</span>);
<a name="l00191"></a>00191                 DWORD exitCode=0;                                                               <span class="comment">//kill the audio recording process</span>
<a name="l00192"></a>00192                 GetExitCodeProcess(pi.hProcess, &amp;exitCode);             <span class="comment">//..</span>
<a name="l00193"></a>00193                 TerminateProcess(pi.hProcess, exitCode);                <span class="comment">//..</span>
<a name="l00194"></a>00194                 CloseHandle(pi.hProcess);                                               <span class="comment">//..</span>
<a name="l00195"></a>00195                 <span class="keywordtype">char</span> endtime[128];
<a name="l00196"></a>00196                 <span class="keywordtype">char</span> endstr[128];
<a name="l00197"></a>00197                 <a class="code" href="_client_server_8h.html#a87a1f273fa8ad585520f9a5e5d071ec4">logfileHandler</a>.GetLocalTime(endtime);
<a name="l00198"></a>00198                 sprintf(endstr,<span class="stringliteral">&quot;E;%s&quot;</span>,endtime);
<a name="l00199"></a>00199                 <a class="code" href="_client_server_8h.html#a87a1f273fa8ad585520f9a5e5d071ec4">logfileHandler</a>.WriteLog(endstr);
<a name="l00200"></a>00200         }
<a name="l00201"></a>00201 <span class="preprocessor">        #endif</span>
<a name="l00202"></a>00202 <span class="preprocessor"></span>
<a name="l00203"></a>00203         <span class="comment">//Tells clients to destroy local copies when server exits.</span>
<a name="l00204"></a>00204         DataStructures::Multilist&lt;ML_STACK, Replica3*&gt; replicaListOut;
<a name="l00205"></a>00205         <span class="comment">// ClearPointers is needed, as I don&#39;t track which objects have and have not been allocated at the application level. </span>
<a name="l00206"></a>00206         <span class="comment">// So ClearPointers will call delete on every object in the returned list, </span>
<a name="l00207"></a>00207         <span class="comment">// which is every object that the application has created. Another way to put it is</span>
<a name="l00208"></a>00208         <span class="comment">//      A. Send a packet to tell other systems to delete these objects</span>
<a name="l00209"></a>00209         <span class="comment">//      B. Delete these objects on my own system</span>
<a name="l00210"></a>00210         replicaManager.GetReferencedReplicaList(replicaListOut);
<a name="l00211"></a>00211         replicaManager.BroadcastDestructionList(replicaListOut, UNASSIGNED_SYSTEM_ADDRESS);
<a name="l00212"></a>00212         replicaListOut.ClearPointers( <span class="keyword">true</span>, __FILE__, __LINE__ );
<a name="l00213"></a>00213         rakPeer-&gt;Shutdown(100,0);
<a name="l00214"></a>00214         RakNetworkFactory::DestroyRakPeerInterface(rakPeer);
<a name="l00215"></a>00215 
<a name="l00216"></a>00216         <span class="keywordflow">return</span> 1;
<a name="l00217"></a>00217 }
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="server_8cpp.html">server.cpp</a>      </li>

    <li class="footer">Generated on Tue May 21 2013 11:03:02 for Beaming Scene Service by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
